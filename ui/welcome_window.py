import tkinter as tk
from tkinter import ttk, messagebox
import threading
from pathlib import Path
import sys

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
from ui.clipboard_support import ClipboardEntry

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from adapters.file_manager import WindowsFileManager
from ui.project_dialogs import ProjectDialog, ProjectManagerDialog

class WelcomeWindow:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("üèóÔ∏è –ò–ò-–ò–Ω–∂–µ–Ω–µ—Ä - –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –≤ –ø–æ–ª–æ–≤–∏–Ω—É —ç–∫—Ä–∞–Ω–∞
        window_width = screen_width // 2
        window_height = screen_height // 2
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        x = (screen_width - window_width) // 2
        y = (screen_height - window_height) // 2
        
        self.root.geometry(f"{window_width}x{window_height}+{x}+{y}")
        self.root.resizable(False, False)
        
        # –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
        self.file_manager = WindowsFileManager()
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞
        self.selected_project = None
        self.create_new_project = False
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
        self.setup_styles()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.setup_ui()
        
    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        style = ttk.Style()
        style.theme_use('clam')
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤ –∏ —à—Ä–∏—Ñ—Ç–æ–≤
        style.configure('Welcome.TLabel', 
                       font=('Segoe UI', 16, 'bold'),
                       foreground='#2c3e50',
                       background='#ecf0f1')
        
        style.configure('Subtitle.TLabel',
                       font=('Segoe UI', 12),
                       foreground='#7f8c8d',
                       background='#ecf0f1')
        
        style.configure('Modern.TButton',
                       font=('Segoe UI', 11, 'bold'),
                       padding=(20, 10),
                       relief='flat',
                       borderwidth=0)
        
        style.map('Modern.TButton',
                 background=[('active', '#3498db'), ('!active', '#2980b9')],
                 foreground=[('active', 'white'), ('!active', 'white')])
        
        style.configure('Project.TFrame',
                       background='#ecf0f1',
                       relief='flat',
                       borderwidth=0)
        
        style.configure('Project.TLabel',
                       font=('Segoe UI', 10),
                       background='#ecf0f1',
                       foreground='#2c3e50')
        
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_frame = ttk.Frame(self.root, style='Project.TFrame')
        main_frame.pack(fill=tk.BOTH, expand=True, padx=40, pady=40)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = ttk.Label(
            main_frame,
            text="üèóÔ∏è –ò–ò-–ò–Ω–∂–µ–Ω–µ—Ä",
            style='Welcome.TLabel'
        )
        title_label.pack(pady=(0, 10))
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle_label = ttk.Label(
            main_frame,
            text="–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤\n—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
            style='Subtitle.TLabel',
            justify=tk.CENTER
        )
        subtitle_label.pack(pady=(0, 30))
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
        features_frame = ttk.Frame(main_frame, style='Project.TFrame')
        features_frame.pack(fill=tk.X, pady=(0, 30))
        
        features_text = """‚Ä¢ üì∏ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–µ—Ñ–µ–∫—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –ò–ò
‚Ä¢ üìä –†–∞—Å—á–µ—Ç —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–Ω–æ—Å–∞ –∑–¥–∞–Ω–∏—è
‚Ä¢ üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
‚Ä¢ üìÑ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤ –≤ Word
‚Ä¢ ‚òÅÔ∏è –û–±–ª–∞—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
‚Ä¢ üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏"""
        
        features_label = ttk.Label(
            features_frame,
            text=features_text,
            style='Project.TLabel',
            justify=tk.LEFT
        )
        features_label.pack()
        
        # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"
        start_button = ttk.Button(
            main_frame,
            text="üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É",
            style='Modern.TButton',
            command=self.start_application
        )
        start_button.pack(pady=(0, 20))
        
        # –í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
        version_label = ttk.Label(
            main_frame,
            text="–í–µ—Ä—Å–∏—è 1.1",
            style='Subtitle.TLabel'
        )
        version_label.pack(side=tk.BOTTOM)
        
    def start_application(self):
        """–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
        try:
            from adapters.auth_client import auth_client
            if auth_client.is_authenticated():
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ–µ–∫—Ç–æ–≤
                user_info = auth_client.user_info
                self.root.destroy()
                project_window = ProjectSelectionWindow(user_info)
                project_window.run()
                return
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        
        # –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        from ui.auth_dialog import show_auth_dialog
        
        auth_result, user_info = show_auth_dialog(self.root)
        
        if auth_result:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
            self.root.destroy()
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            project_window = ProjectSelectionWindow(user_info)
            project_window.run()
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
            messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
        
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–∫–Ω–∞"""
        self.root.mainloop()


class ProjectSelectionWindow:
    """–û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
    
    def __init__(self, user_info=None):
        self.user_info = user_info
        
        # –ï—Å–ª–∏ user_info –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ auth_client
        if not self.user_info:
            try:
                from adapters.auth_client import auth_client
                if auth_client.is_authenticated():
                    user_info_result = auth_client.get_user_info()
                    if user_info_result.get('success'):
                        self.user_info = user_info_result['user']
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {e}")
        
        self.root = tk.Tk()
        self.root.title("üèóÔ∏è –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
        window_width = min(900, screen_width * 2 // 3)
        window_height = min(750, screen_height * 2 // 3)
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
        x = (screen_width - window_width) // 2
        y = (screen_height - window_height) // 2
        
        self.root.geometry(f"{window_width}x{window_height}+{x}+{y}")
        self.root.resizable(True, True)  # –†–∞–∑—Ä–µ—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É –æ–∫–Ω–∞, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∏ –≤—Å–µ–≥–¥–∞ –±—ã–ª–∏ –≤–∏–¥–Ω—ã
        self.root.minsize(window_width, 800)
        
        # –§–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
        self.file_manager = WindowsFileManager()
        
        # API –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
        self.project_api_client = None
        try:
            from adapters.project_api_client import get_project_api_client
            from adapters.auth_client import auth_client
            self.project_api_client = get_project_api_client(auth_client)
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å API –∫–ª–∏–µ–Ω—Ç: {e}")
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞
        self.selected_project = None
        self.create_new_project = False
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π
        self.setup_styles()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.setup_ui()
        
    def setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ç–∏–ª–µ–π –≤ —Å—Ç–∏–ª–µ iOS"""
        style = ttk.Style()
        style.theme_use('clam')
        
        # iOS-—Å—Ç–∏–ª—å —Ç–æ–∫–µ–Ω—ã (–Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ª–∏—Ç—Ä—ã)
        self.tokens = {
            '--bg': '#f5f5f5',           # –û–±—â–∏–π —Ñ–æ–Ω —ç–∫—Ä–∞–Ω–∞ (—Å–≤–µ—Ç–ª—ã–π)
            '--card': '#ffffff',         # –§–æ–Ω –∫–∞—Ä—Ç–æ—á–µ–∫ (–±–µ–ª—ã–π)
            '--text': '#212121',         # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
            '--muted': '#757575',        # –í—Ç–æ—Ä–∏—á–Ω—ã–π —Ç–µ–∫—Å—Ç/–ø–æ–¥–ø–∏—Å–∏
            '--primary': '#1e88e5',      # –°–∏–Ω–∏–π (—Ç–µ–∫—É—â–∏–π)
            '--border': '#e0e0e0',       # –°–µ—Ä—ã–π –±–æ—Ä–¥–µ—Ä/—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
            '--focus': '#1e88e5'         # Primary —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é –¥–ª—è —Ñ–æ–∫—É—Å–∞
        }
        
        # iOS-—Å—Ç–∏–ª—å –∏–∫–æ–Ω–∫–∏ (SF Symbols —Å—Ç–∏–ª—å, 16-20px)
        self.icons = {
            'add': '‚ûï',           # –î–æ–±–∞–≤–∏—Ç—å
            'settings': '‚öôÔ∏è',     # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            'sync': '‚òÅÔ∏è',         # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
            'folder': 'üìÅ',       # –ü–∞–ø–∫–∞/–ø—Ä–æ–µ–∫—Ç
            'rocket': 'üöÄ',       # –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            'logout': 'üö™',       # –í—ã–π—Ç–∏
            'search': 'üîç',       # –ü–æ–∏—Å–∫
            'manage': '‚öôÔ∏è',       # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            'hint': 'üí°',         # –ü–æ–¥—Å–∫–∞–∑–∫–∞
            'empty': 'üìÇ'         # –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        }
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
        primary_color = self.tokens['--primary']
        primary_hover = '#1976d2'       # –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        secondary_color = '#64b5f6'    # –°–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π
        secondary_hover = '#42a5f5'    # –°–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        background_color = self.tokens['--bg']
        surface_color = self.tokens['--card']
        text_primary = self.tokens['--text']
        text_secondary = self.tokens['--muted']
        border_color = self.tokens['--border']
        
        # iOS-—Å—Ç–∏–ª—å —à—Ä–∏—Ñ—Ç—ã –∏ —Ä–∞–∑–º–µ—Ä—ã
        style.configure('LargeTitle.TLabel', 
                       font=('Segoe UI', 28, 'bold'),  # LargeTitle: 28px semibold
                       foreground=text_primary,
                       background=background_color)
        
        style.configure('H2.TLabel',
                       font=('Segoe UI', 17, 'bold'),  # H2 —Å–µ–∫—Ü–∏–π: 17px semibold
                       foreground=text_primary,
                       background=background_color)
        
        style.configure('Body.TLabel',
                       font=('Segoe UI', 15),         # –¢–µ–∫—Å—Ç/–ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã: 15px
                       foreground=text_primary,
                       background=background_color)
        
        style.configure('Muted.TLabel',
                       font=('Segoe UI', 15),         # –í—Ç–æ—Ä–∏—á–Ω—ã–π —Ç–µ–∫—Å—Ç: 15px
                       foreground=text_secondary,
                       background=background_color)
        
        # –°—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        style.configure('Title.TLabel', 
                       font=('Segoe UI', 18, 'bold'),
                       foreground=text_primary,
                       background=background_color)
        
        style.configure('Subtitle.TLabel',
                       font=('Segoe UI', 13),
                       foreground=text_secondary,
                       background=background_color)
        
        # iOS-—Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ)
        style.configure('Primary.TButton',
                       font=('Segoe UI', 13, 'bold'),  # –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç
                       padding=(12, 8),               # –£–º–µ–Ω—å—à–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
                       relief='flat',
                       borderwidth=0,
                       background=primary_color,
                       foreground='white')
        
        style.map('Primary.TButton',
                 background=[('active', primary_hover), ('!active', primary_color)],
                 foreground=[('active', 'white'), ('!active', 'white')])
        
        # Secondary –∫–Ω–æ–ø–∫–∏ (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ)
        style.configure('Secondary.TButton',
                       font=('Segoe UI', 13),
                       padding=(12, 8),
                       relief='flat',
                       borderwidth=1,
                       background=surface_color,
                       foreground=text_primary,
                       bordercolor=border_color)
        
        style.map('Secondary.TButton',
                 background=[('active', '#f0f0f0'), ('!active', surface_color)],
                 foreground=[('active', text_primary), ('!active', text_primary)])
        
        # Ghost –∫–Ω–æ–ø–∫–∏ (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ)
        style.configure('Ghost.TButton',
                       font=('Segoe UI', 13),
                       padding=(12, 8),
                       relief='flat',
                       borderwidth=0,
                       background=background_color,
                       foreground=text_secondary)
        
        style.map('Ghost.TButton',
                 background=[('active', '#f0f0f0'), ('!active', background_color)],
                 foreground=[('active', text_primary), ('!active', text_secondary)])
        
        # –°—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        style.configure('Modern.TButton',
                       font=('Segoe UI', 12, 'bold'),
                       padding=(24, 12),
                       relief='flat',
                       borderwidth=0,
                       background=primary_color,
                       foreground='white')
        
        style.map('Modern.TButton',
                 background=[('active', primary_hover), ('!active', primary_color)],
                 foreground=[('active', 'white'), ('!active', 'white')])
        
        # iOS-—Å—Ç–∏–ª—å —Ñ—Ä–µ–π–º—ã –∏ –∫–∞—Ä—Ç–æ—á–∫–∏
        style.configure('Card.TFrame',
                       background=surface_color,      # --card (–±–µ–ª—ã–π)
                       relief='flat',
                       borderwidth=1,
                       bordercolor=border_color)      # --border
        
        style.configure('Project.TFrame',
                       background=background_color,    # --bg (—Å–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω)
                       relief='flat',
                       borderwidth=0)
        
        style.configure('Project.TLabel',
                       font=('Segoe UI', 11),
                       background=background_color,
                       foreground=text_primary)
        
        # iOS-—Å—Ç–∏–ª—å LabelFrame (–∫–∞—Ä—Ç–æ—á–∫–∏)
        style.configure('Card.TLabelframe',
                       background=surface_color,       # --card
                       relief='flat',
                       borderwidth=1,
                       bordercolor=border_color)       # --border
        
        style.configure('Card.TLabelframe.Label',
                       font=('Segoe UI', 17, 'bold'), # H2: 17px semibold
                       foreground=text_primary,
                       background=surface_color)
        
        # –°—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        style.configure('TLabelframe',
                       background=background_color,
                       relief='flat',
                       borderwidth=1,
                       bordercolor=border_color)
        
        style.configure('TLabelframe.Label',
                       font=('Segoe UI', 12, 'bold'),
                       foreground=text_primary,
                       background=background_color)
        
        # iOS-—Å—Ç–∏–ª—å –ø–æ–ª—è –≤–≤–æ–¥–∞ (–≤—ã—Å–æ—Ç–∞ 44px, —Ä–∞–¥–∏—É—Å 12px)
        style.configure('iOS.TEntry',
                       font=('Segoe UI', 15),          # 15px –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
                       fieldbackground=surface_color, # --card
                       borderwidth=1,
                       relief='flat',
                       bordercolor=border_color)       # --border
        
        style.map('iOS.TEntry',
                 bordercolor=[('focus', primary_color), ('!focus', border_color)],
                 fieldbackground=[('focus', surface_color), ('!focus', surface_color)])
        
        # iOS-—Å—Ç–∏–ª—å Combobox
        style.configure('iOS.TCombobox',
                       font=('Segoe UI', 15),
                       background=surface_color,
                       fieldbackground=surface_color,
                       borderwidth=1,
                       relief='flat',
                       bordercolor=border_color)
        
        style.map('iOS.TCombobox',
                 fieldbackground=[('readonly', surface_color)],
                 selectbackground=[('readonly', primary_color)],
                 selectforeground=[('readonly', 'white')],
                 bordercolor=[('focus', primary_color), ('!focus', border_color)])
        
        # iOS-—Å—Ç–∏–ª—å Treeview (–∫–∞–∫ iOS-—Å–ø–∏—Å–æ–∫)
        style.configure('iOS.Treeview',
                       font=('Segoe UI', 15),          # 15px –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
                       background=surface_color,       # --card
                       foreground=text_primary,       # --text
                       fieldbackground=surface_color,
                       borderwidth=0,                  # –ë–µ–∑ –±–æ—Ä–¥–µ—Ä–∞
                       relief='flat')
        
        style.configure('iOS.Treeview.Heading',
                       font=('Segoe UI', 15, 'bold'), # 15px –ø–æ–ª—É–∂–∏—Ä–Ω—ã–π
                       background=surface_color,        # --card
                       foreground=text_secondary,      # --muted
                       relief='flat',
                       borderwidth=0)
        
        style.map('iOS.Treeview',
                 background=[('selected', '#f0f0f0'), ('!selected', surface_color)],  # –î–µ–ª–∏–∫–∞—Ç–Ω–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞
                 foreground=[('selected', text_primary), ('!selected', text_primary)])
        
        # iOS-—Å—Ç–∏–ª—å —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã (overlay/–∞–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏–µ)
        style.configure('iOS.Vertical.TScrollbar',
                       background='#c0c0c0',           # –°–µ—Ä—ã–π –¥–ª—è overlay
                       bordercolor='#c0c0c0',
                       arrowcolor=text_secondary,
                       troughcolor='transparent',       # –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω
                       width=8,                         # –£–∂–µ —Å–∫—Ä–æ–ª–ª–±–∞—Ä
                       relief='flat')
        
        style.map('iOS.Vertical.TScrollbar',
                 background=[('active', '#a0a0a0'), ('!active', '#c0c0c0')],
                 arrowcolor=[('active', text_primary), ('!active', text_secondary)])
        
        # –°—Ç–∞—Ä—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        # Combobox —Å—Ç–∏–ª–∏
        style.configure('TCombobox',
                       font=('Segoe UI', 11),
                       background=surface_color,
                       fieldbackground=surface_color,
                       borderwidth=1,
                       relief='flat',
                       bordercolor=border_color)
        
        style.map('TCombobox',
                 fieldbackground=[('readonly', surface_color)],
                 selectbackground=[('readonly', primary_color)],
                 selectforeground=[('readonly', 'white')])
        
        # Treeview —Å—Ç–∏–ª–∏
        style.configure('Treeview',
                       font=('Segoe UI', 10),
                       background=surface_color,
                       foreground=text_primary,
                       fieldbackground=surface_color,
                       borderwidth=1,
                       relief='flat',
                       bordercolor=border_color)
        
        style.configure('Treeview.Heading',
                       font=('Segoe UI', 11, 'bold'),
                       background=primary_color,
                       foreground='white',
                       relief='flat',
                       borderwidth=0)
        
        style.map('Treeview',
                 background=[('selected', primary_color)],
                 foreground=[('selected', 'white')])
        
        # Scrollbar —Å—Ç–∏–ª–∏
        style.configure('Vertical.TScrollbar',
                       background=border_color,
                       bordercolor=border_color,
                       arrowcolor=text_secondary,
                       troughcolor=background_color,
                       width=12,
                       relief='flat')
        
        style.map('Vertical.TScrollbar',
                 background=[('active', primary_color)],
                 arrowcolor=[('active', 'white')])
        
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ —Å—Ç–∏–ª–µ iOS"""
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_frame = ttk.Frame(self.root, style='Project.TFrame')
        main_frame.pack(fill=tk.BOTH, expand=True, padx=24, pady=24)  # –û—Ç—Å—Ç—É–ø—ã 24px
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ (iOS LargeTitle)
        title_label = ttk.Label(
            main_frame,
            text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç",
            style='LargeTitle.TLabel'
        )
        title_label.pack(pady=(0, 8))
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        if self.user_info:
            user_name = self.user_info.get('name') or self.user_info.get('email', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
            user_label = ttk.Label(
                main_frame,
                text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!",
                style='Muted.TLabel'
            )
            user_label.pack(pady=(0, 4))
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ (–≤—Ç–æ—Ä–∏—á–Ω—ã–º —Ü–≤–µ—Ç–æ–º)
        subtitle_label = ttk.Label(
            main_frame,
            text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π",
            style='Muted.TLabel'
        )
        subtitle_label.pack(pady=(0, 24))
        
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (—Å–≤–µ—Ä—Ö—É –ø—Ä–æ–µ–∫—Ç—ã, —Å–Ω–∏–∑—É –æ–±—ä–µ–∫—Ç—ã)
        layout_frame = ttk.Frame(main_frame, style='Project.TFrame')
        layout_frame.pack(fill=tk.BOTH, expand=True, pady=(0, 20))
        
        # –í–µ—Ä—Ö–Ω—è—è —Å–µ–∫—Ü–∏—è - –ü—Ä–æ–µ–∫—Ç—ã (–º–µ–Ω—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞)
        projects_card = ttk.LabelFrame(layout_frame, text="–ü—Ä–æ–µ–∫—Ç—ã", style='Card.TLabelframe', padding=16)
        projects_card.pack(fill=tk.X, pady=(0, 16))  # –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É 16px
        
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
        projects_content_frame = ttk.Frame(projects_card, style='Card.TFrame')
        projects_content_frame.pack(fill=tk.X)
        
        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - —Ç–∞–±–ª–∏—Ü–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
        left_projects_frame = ttk.Frame(projects_content_frame, style='Card.TFrame')
        left_projects_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=(0, 16))
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–æ–≤ (iOS-—Å—Ç–∏–ª—å)
        projects_table_frame = ttk.Frame(left_projects_frame, style='Card.TFrame')
        projects_table_frame.pack(fill=tk.BOTH, expand=True)
        
        # –°–æ–∑–¥–∞–µ–º Treeview –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
        columns = ('name', 'count')
        self.projects_tree = ttk.Treeview(
            projects_table_frame,
            columns=columns,
            show='headings',
            style='iOS.Treeview'
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
        self.projects_tree.heading('name', text='–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞')
        self.projects_tree.heading('count', text='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤')
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ (–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π –æ–±—ä–µ–∫—Ç–æ–≤)
        self.projects_tree.column('name', width=200, anchor='w')
        self.projects_tree.column('count', width=120, anchor='e')  # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –¥–ª—è —á–∏—Å–µ–ª
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
        projects_scrollbar = ttk.Scrollbar(projects_table_frame, orient=tk.VERTICAL, command=self.projects_tree.yview, style='iOS.Vertical.TScrollbar')
        self.projects_tree.configure(yscrollcommand=projects_scrollbar.set)
        
        # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.projects_tree.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        projects_scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        self.project_var = tk.StringVar(value="–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç")
        
        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
        buttons_frame = ttk.Frame(projects_content_frame, style='Card.TFrame')
        buttons_frame.pack(side=tk.RIGHT, fill=tk.Y)
        
        # Primary –∫–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç" (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è)
        add_project_button = ttk.Button(
            buttons_frame,
            text=f"{self.icons['add']} –î–æ–±–∞–≤–∏—Ç—å",
            style='Primary.TButton',
            command=self.add_new_project_global
        )
        add_project_button.pack(fill=tk.X, pady=(0, 8))
        
        # –ö–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç" (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è)
        delete_project_button = ttk.Button(
            buttons_frame,
            text=f"‚ùå –£–¥–∞–ª–∏—Ç—å",
            style='Secondary.TButton',
            command=self.delete_selected_project
        )
        delete_project_button.pack(fill=tk.X, pady=(0, 8))
        
        # Secondary –∫–Ω–æ–ø–∫–∞ "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å" (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è)
        sync_projects_button = ttk.Button(
            buttons_frame,
            text=f"{self.icons['sync']} –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å",
            style='Secondary.TButton',
            command=self.sync_projects_from_server
        )
        sync_projects_button.pack(fill=tk.X)
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        self.project_var = tk.StringVar(value="–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç")
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        self.projects_tree.bind('<<TreeviewSelect>>', self.on_project_tree_select)
        self.projects_tree.bind('<Double-1>', self.on_project_tree_double_click)
        
        # –ù–∏–∂–Ω—è—è —Å–µ–∫—Ü–∏—è - –û–±—ä–µ–∫—Ç—ã (–±–æ–ª—å—à–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞)
        objects_card = ttk.LabelFrame(layout_frame, text="–û–±—ä–µ–∫—Ç—ã", style='Card.TLabelframe', padding=20)
        objects_card.pack(fill=tk.X, pady=(0, 0))
        
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–æ–º–ø–æ–Ω–æ–≤–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤
        objects_content_frame = ttk.Frame(objects_card, style='Card.TFrame')
        objects_content_frame.pack(fill=tk.BOTH, expand=True)
        
        # –õ–µ–≤–∞—è —á–∞—Å—Ç—å - —Ç–∞–±–ª–∏—Ü–∞ –æ–±—ä–µ–∫—Ç–æ–≤
        objects_table_frame = ttk.Frame(objects_content_frame, style='Card.TFrame')
        objects_table_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=(0, 16))
        
        # –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏ (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
        objects_buttons_frame = ttk.Frame(objects_content_frame, style='Card.TFrame')
        objects_buttons_frame.pack(side=tk.RIGHT, fill=tk.Y)
        
        # Primary –∫–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç" (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è)
        self.add_object_button = ttk.Button(
            objects_buttons_frame,
            text=f"{self.icons['add']} –î–æ–±–∞–≤–∏—Ç—å",
            style='Primary.TButton',
            command=self.add_new_object
        )
        self.add_object_button.pack(fill=tk.X, pady=(0, 8))
        
        # Secondary –∫–Ω–æ–ø–∫–∞ "–£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç" (–∫–æ–º–ø–∞–∫—Ç–Ω–∞—è)
        self.delete_object_button = ttk.Button(
            objects_buttons_frame,
            text=f"‚ùå –£–¥–∞–ª–∏—Ç—å",
            style='Secondary.TButton',
            command=self.delete_selected_object
        )
        self.delete_object_button.pack(fill=tk.X)
        
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –æ–±—ä–µ–∫—Ç–æ–≤
        columns = ('name', 'wear', 'last_date')
        self.objects_tree = ttk.Treeview(
            objects_table_frame,
            columns=columns,
            show='headings',
            style='iOS.Treeview'
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–ª–æ–Ω–æ–∫ (iOS-—Å—Ç–∏–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∏)
        self.objects_tree.heading('name', text='–ù–∞–∑–≤–∞–Ω–∏–µ')
        self.objects_tree.heading('wear', text='–ò–∑–Ω–æ—Å')
        self.objects_tree.heading('last_date', text='–ò–∑–º–µ–Ω—ë–Ω')
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ (–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π –ø—Ä–æ–µ–∫—Ç–æ–≤)
        self.objects_tree.column('name', width=200, anchor='w')
        self.objects_tree.column('wear', width=120, anchor='e')  # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –¥–ª—è —á–∏—Å–µ–ª
        self.objects_tree.column('last_date', width=120, anchor='e')  # –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –≤–ø—Ä–∞–≤–æ –¥–ª—è –¥–∞—Ç
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä (iOS-—Å—Ç–∏–ª—å)
        scrollbar = ttk.Scrollbar(objects_table_frame, orient=tk.VERTICAL, command=self.objects_tree.yview, style='iOS.Vertical.TScrollbar')
        self.objects_tree.configure(yscrollcommand=scrollbar.set)
        
        # –†–∞–∑–º–µ—â–µ–Ω–∏–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –≤—ã—Å–æ—Ç–æ–π
        self.objects_tree.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É —Ç–∞–±–ª–∏—Ü—ã –æ–±—ä–µ–∫—Ç–æ–≤
        self.objects_tree.configure(height=8)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞
        self.objects_tree.bind('<<TreeviewSelect>>', self.on_project_select)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞
        self.objects_tree.bind('<Double-1>', self.on_double_click)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Enter –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
        self.objects_tree.bind('<Return>', self.on_enter_press)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Enter –¥–ª—è –≤—Å–µ–≥–æ –æ–∫–Ω–∞
        self.root.bind('<Return>', self.on_enter_press)
        
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        self.root.bind('<Tab>', self.on_tab_navigation)
        self.root.bind('<Shift-Tab>', self.on_shift_tab_navigation)
        self.root.bind('<Up>', self.on_arrow_navigation)
        self.root.bind('<Down>', self.on_arrow_navigation)
        self.root.bind('<Left>', self.on_arrow_navigation)
        self.root.bind('<Right>', self.on_arrow_navigation)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.projects_tree.focus_set()
        
        # –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–µ–π—Å—Ç–≤–∏–π (–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –≤–Ω–∏–∑—É)
        bottom_frame = ttk.Frame(main_frame, style='Project.TFrame')
        bottom_frame.pack(side=tk.BOTTOM, fill=tk.X, pady=(20, 0))
        
        # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" (Primary)
        self.continue_btn = ttk.Button(
            bottom_frame,
            text=f"{self.icons['rocket']} –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            style='Primary.TButton',
            command=self.continue_to_main,
            state="disabled"  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
        )
        self.continue_btn.pack(side=tk.RIGHT, padx=(8, 0))
        
        # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        hint_label = ttk.Label(
            bottom_frame,
            text=f"{self.icons['hint']} –í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', –∏–ª–∏ –¥–≤–∞–∂–¥—ã –∫–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –æ–±—ä–µ–∫—Ç—É",
            style='Muted.TLabel',
            justify=tk.LEFT
        )
        hint_label.pack(side=tk.LEFT, fill=tk.X, expand=True)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (Ghost)
        if self.user_info:
            logout_button = ttk.Button(
                bottom_frame,
                text=f"{self.icons['logout']} –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã",
                style='Ghost.TButton',
                command=self.logout
            )
            logout_button.pack(side=tk.RIGHT, padx=(0, 16))
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        self.update_projects_list()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ (–ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏)
        self.update_objects_list(self.project_var.get())
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (–≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)
        self.auto_sync_projects()
        
        # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        print(f"–ö–Ω–æ–ø–∫–∞ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å' —Å–æ–∑–¥–∞–Ω–∞: {self.continue_btn}")
        print(f"–†–∞–∑–º–µ—Ä –æ–∫–Ω–∞: {self.root.winfo_width()}x{self.root.winfo_height()}")
        print(f"–ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∏–º–∞: {self.continue_btn.winfo_viewable()}")
        print(f"–ö–Ω–æ–ø–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∞: {self.continue_btn.winfo_geometry()}")
        
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        self.root.update_idletasks()
    
    def delete_selected_project(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            selection = self.projects_tree.selection()
            if not selection:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                return
            
            item = self.projects_tree.item(selection[0])
            project_name = item['values'][0]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            result = messagebox.askyesno(
                "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                f"–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç '{project_name}'?",
                icon='warning'
            )
            
            if result:
                # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –ª–æ–∫–∞–ª—å–Ω–æ
                local_success = self.file_manager.remove_global_project(project_name)
                
                # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                server_success = False
                try:
                    from adapters.project_api_client import get_project_api_client
                    from adapters.auth_client import auth_client
                    
                    if auth_client.is_authenticated():
                        project_client = get_project_api_client(auth_client)
                        
                        # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                        projects_result = project_client.get_projects()
                        if projects_result.get('success'):
                            projects = projects_result.get('projects', [])
                            project_id = None
                            for project in projects:
                                if project.get('name') == project_name:
                                    project_id = project.get('id')
                                    break
                            
                            if project_id:
                                delete_result = project_client.delete_project(project_id)
                                if delete_result.get('success'):
                                    server_success = True
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞: {e}")
                
                if local_success:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
                    self.update_projects_list()
                    
                    # –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –±—ã–ª –≤—ã–±—Ä–∞–Ω, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π
                    remaining_projects = self.file_manager.get_global_projects()
                    if remaining_projects:
                        self.project_var.set(remaining_projects[0])
                        self.update_objects_list(remaining_projects[0])
                    else:
                        self.project_var.set("–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç")
                        self.update_objects_list("–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç")
                else:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
                    
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {str(e)}")
    
    def delete_selected_object(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
            selection = self.objects_tree.selection()
            if not selection:
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
                return
            
            item = self.objects_tree.item(selection[0])
            object_name = item['values'][0]
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            result = messagebox.askyesno(
                "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
                f"–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç '{object_name}'?",
                icon='warning'
            )
            
            if result:
                current_project = self.project_var.get()
                
                # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ API
                api_success = False
                if self.project_api_client and self.user_info:
                    try:
                        # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
                        projects_result = self.project_api_client.get_projects()
                        if projects_result.get('success'):
                            projects = projects_result.get('projects', [])
                            project_id = None
                            for project in projects:
                                if project.get('name') == current_project:
                                    project_id = project.get('id')
                                    break
                            
                            if project_id:
                                # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ ID –æ–±—ä–µ–∫—Ç–∞
                                objects_result = self.project_api_client.get_objects_by_project(project_id)
                                if objects_result.get('success'):
                                    api_objects = objects_result.get('objects', [])
                                    object_id = None
                                    for obj in api_objects:
                                        if obj.get('name') == object_name:
                                            object_id = obj.get('id')
                                            break
                                    
                                    if object_id:
                                        # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ API
                                        delete_result = self.project_api_client.delete_object(object_id)
                                        if delete_result.get('success'):
                                            api_success = True
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ API: {e}")
                
                # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
                local_success = self.file_manager.remove_object_from_project(current_project, object_name)
                
                if api_success or local_success:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
                    self.update_objects_list(current_project)
                else:
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç")
                    
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: {str(e)}")
    
    def on_tab_navigation(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ Tab –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–æ–∫—É—Å
        current_focus = self.root.focus_get()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —Ñ–æ–∫—É—Å–∞
        if current_focus == self.projects_tree:
            self.objects_tree.focus_set()
        elif current_focus == self.objects_tree:
            self.continue_btn.focus_set()
        else:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –Ω–∞—á–∞–ª—É
            self.projects_tree.focus_set()
        
        return "break"  # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ Tab
    
    def on_shift_tab_navigation(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ Shift+Tab –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        current_focus = self.root.focus_get()
        
        # –û–±—Ä–∞—Ç–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
        if current_focus == self.projects_tree:
            self.continue_btn.focus_set()
        elif current_focus == self.objects_tree:
            self.projects_tree.focus_set()
        else:
            self.objects_tree.focus_set()
        
        return "break"
    
    def on_arrow_navigation(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç—Ä–µ–ª–æ–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Å–ø–∏—Å–∫–∞–º"""
        current_focus = self.root.focus_get()
        
        if current_focus == self.projects_tree:
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∞–±–ª–∏—Ü–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
            if event.keysym == 'Up':
                current_selection = self.projects_tree.selection()
                if current_selection:
                    prev_item = self.projects_tree.prev(current_selection[0])
                    if prev_item:
                        self.projects_tree.selection_clear()
                        self.projects_tree.selection_set(prev_item)
                        self.projects_tree.see(prev_item)
            elif event.keysym == 'Down':
                current_selection = self.projects_tree.selection()
                if current_selection:
                    next_item = self.projects_tree.next(current_selection[0])
                    if next_item:
                        self.projects_tree.selection_clear()
                        self.projects_tree.selection_set(next_item)
                        self.projects_tree.see(next_item)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            self.on_project_tree_select(None)
            return "break"
        
        elif current_focus == self.objects_tree:
            # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∞–±–ª–∏—Ü–µ –æ–±—ä–µ–∫—Ç–æ–≤
            if event.keysym == 'Up':
                current_selection = self.objects_tree.selection()
                if current_selection:
                    prev_item = self.objects_tree.prev(current_selection[0])
                    if prev_item:
                        self.objects_tree.selection_clear()
                        self.objects_tree.selection_set(prev_item)
                        self.objects_tree.see(prev_item)
            elif event.keysym == 'Down':
                current_selection = self.objects_tree.selection()
                if current_selection:
                    next_item = self.objects_tree.next(current_selection[0])
                    if next_item:
                        self.objects_tree.selection_clear()
                        self.objects_tree.selection_set(next_item)
                        self.objects_tree.see(next_item)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
            self.on_project_select(None)
            return "break"
        
    def on_project_select(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞"""
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
        selection = self.objects_tree.selection()
        if selection:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            item = self.objects_tree.item(selection[0])
            object_name = item['values'][0]  # –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
            self.selected_project = object_name
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
            self.continue_btn.config(state="normal")
            print(f"–í—ã–±—Ä–∞–Ω –æ–±—ä–µ–∫—Ç: {object_name}, –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
        else:
            self.selected_project = None
            self.continue_btn.config(state="disabled")
            print("–û–±—ä–µ–∫—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω, –∫–Ω–æ–ø–∫–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
    
    def on_double_click(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ –æ–±—ä–µ–∫—Ç—É"""
        selection = self.objects_tree.selection()
        if selection:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            item = self.objects_tree.item(selection[0])
            object_name = item['values'][0]  # –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É
            self.selected_project = object_name
            self.continue_to_main()
    
    def on_enter_press(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Enter"""
        if self.selected_project and self.continue_btn.cget('state') == 'normal':
            self.continue_to_main()
            
    def add_new_project_global(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
        try:
            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
            dialog = tk.Toplevel(self.root)
            dialog.title("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç")
            dialog.geometry("500x300")
            dialog.resizable(False, False)
            dialog.transient(self.root)
            dialog.grab_set()
            
            # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
            dialog.update_idletasks()
            x = (dialog.winfo_screenwidth() // 2) - (500 // 2)
            y = (dialog.winfo_screenheight() // 2) - (300 // 2)
            dialog.geometry(f"500x300+{x}+{y}")
            
            # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–ª–æ–≥–∞
            main_frame = ttk.Frame(dialog, padding=24)
            main_frame.pack(fill=tk.BOTH, expand=True)
            
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏
            section_label = ttk.Label(main_frame, text="–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–ï–ö–¢–ï", style='Muted.TLabel')
            section_label.pack(anchor=tk.W, pady=(0, 16))
            
            # –ö–∞—Ä—Ç–æ—á–∫–∞ —Å –ø–æ–ª—è–º–∏ –≤–≤–æ–¥–∞
            input_card = ttk.Frame(main_frame, style='Card.TFrame')
            input_card.pack(fill=tk.X, pady=(0, 20))
            
            # –ü–æ–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
            name_frame = ttk.Frame(input_card, style='Card.TFrame')
            name_frame.pack(fill=tk.X, padx=16, pady=16)
            
            project_var = tk.StringVar()
            project_entry = ClipboardEntry(
                name_frame, 
                textvariable=project_var, 
                font=('Segoe UI', 15)
            )
            project_entry.pack(fill=tk.X, ipady=8)
            project_entry.insert(0, "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
            project_entry.configure(foreground=self.tokens['--muted'])
            project_entry.focus()
            
            # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            separator = ttk.Frame(input_card, height=1, style='Card.TFrame')
            separator.pack(fill=tk.X, padx=16)
            separator.configure(background=self.tokens['--border'])
            
            # –ü–æ–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è
            desc_frame = ttk.Frame(input_card, style='Card.TFrame')
            desc_frame.pack(fill=tk.X, padx=16, pady=16)
            
            desc_var = tk.StringVar()
            desc_entry = ClipboardEntry(
                desc_frame, 
                textvariable=desc_var, 
                font=('Segoe UI', 15)
            )
            desc_entry.pack(fill=tk.X, ipady=8)
            desc_entry.insert(0, "–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
            desc_entry.configure(foreground=self.tokens['--muted'])
            
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–æ–∫—É—Å–∞ –¥–ª—è –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤
            def on_name_focus_in(event):
                if project_entry.get() == "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞":
                    project_entry.delete(0, tk.END)
                    project_entry.configure(foreground=self.tokens['--text'])
            
            def on_name_focus_out(event):
                if not project_entry.get():
                    project_entry.insert(0, "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
                    project_entry.configure(foreground=self.tokens['--muted'])
            
            def on_desc_focus_in(event):
                if desc_entry.get() == "–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)":
                    desc_entry.delete(0, tk.END)
                    desc_entry.configure(foreground=self.tokens['--text'])
            
            def on_desc_focus_out(event):
                if not desc_entry.get():
                    desc_entry.insert(0, "–û–ø–∏—Å–∞–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
                    desc_entry.configure(foreground=self.tokens['--muted'])
            
            project_entry.bind('<FocusIn>', on_name_focus_in)
            project_entry.bind('<FocusOut>', on_name_focus_out)
            desc_entry.bind('<FocusIn>', on_desc_focus_in)
            desc_entry.bind('<FocusOut>', on_desc_focus_out)
            
            # –ö–Ω–æ–ø–∫–∏
            buttons_frame = ttk.Frame(main_frame)
            buttons_frame.pack()
            
            def save_project():
                project_name = project_var.get().strip()
                project_desc = desc_var.get().strip()
                
                if project_name and project_name != "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞":
                    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –ª–æ–∫–∞–ª—å–Ω–æ
                    local_success = self.file_manager.add_global_project(project_name)
                    
                    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                    server_success = False
                    try:
                        from adapters.project_api_client import get_project_api_client
                        from adapters.auth_client import auth_client
                        
                        if auth_client.is_authenticated():
                            project_client = get_project_api_client(auth_client)
                            result = project_client.create_project(project_name, project_desc)
                            if result.get('success'):
                                server_success = True
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {e}")
                    
                    if local_success:
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
                        self.update_projects_list()
                        self.project_var.set(project_name)
                        self.update_objects_list(project_name)
                    else:
                        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–¢–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                    
                    dialog.destroy()
                else:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
            
            def cancel():
                dialog.destroy()
            
            # –ö–Ω–æ–ø–∫–∏
            ttk.Button(buttons_frame, text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", style='Primary.TButton', command=save_project).pack(side=tk.RIGHT, padx=(8, 0))
            ttk.Button(buttons_frame, text="–û—Ç–º–µ–Ω–∞", style='Secondary.TButton', command=cancel).pack(side=tk.RIGHT)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –∏ Escape
            project_entry.bind('<Return>', lambda e: save_project())
            desc_entry.bind('<Return>', lambda e: save_project())
            dialog.bind('<Escape>', lambda e: cancel())
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {str(e)}")
            
    def manage_global_projects(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏"""
        try:
            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏
            dialog = tk.Toplevel(self.root)
            dialog.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏")
            dialog.geometry("500x400")
            dialog.resizable(False, False)
            dialog.transient(self.root)
            dialog.grab_set()
            
            # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
            dialog.update_idletasks()
            x = (dialog.winfo_screenwidth() // 2) - (500 // 2)
            y = (dialog.winfo_screenheight() // 2) - (400 // 2)
            dialog.geometry(f"500x400+{x}+{y}")
            
            # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–ª–æ–≥–∞
            main_frame = ttk.Frame(dialog, padding=20)
            main_frame.pack(fill=tk.BOTH, expand=True)
            
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            title_label = ttk.Label(main_frame, text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏", style='Title.TLabel')
            title_label.pack(pady=(0, 20))
            
            # –°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
            projects_frame = ttk.LabelFrame(main_frame, text="–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤", padding=15)
            projects_frame.pack(fill=tk.BOTH, expand=True, pady=(0, 20))
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
            current_projects = self.file_manager.get_global_projects()
            
            # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
            projects_listbox = tk.Listbox(
                projects_frame,
                font=('Segoe UI', 11),
                selectmode=tk.SINGLE,
                relief='flat',
                borderwidth=1
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –≤ —Å–ø–∏—Å–æ–∫
            for project in current_projects:
                projects_listbox.insert(tk.END, project)
            
            # –°–∫—Ä–æ–ª–ª–±–∞—Ä
            scrollbar = ttk.Scrollbar(projects_frame, orient=tk.VERTICAL, command=projects_listbox.yview)
            projects_listbox.configure(yscrollcommand=scrollbar.set)
            
            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ
            projects_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
            scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
            
            # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            buttons_frame = ttk.Frame(main_frame)
            buttons_frame.pack(fill=tk.X)
            
            def delete_project():
                selection = projects_listbox.curselection()
                if selection:
                    index = selection[0]
                    project_name = projects_listbox.get(index)
                    
                    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç
                    if True:
                        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –ª–æ–∫–∞–ª—å–Ω–æ
                        local_success = self.file_manager.remove_global_project(project_name)
                        
                        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                        server_success = False
                        server_message = ""
                        
                        try:
                            from adapters.project_api_client import get_project_api_client
                            from adapters.auth_client import auth_client
                            
                            if auth_client.is_authenticated():
                                project_client = get_project_api_client(auth_client)
                                
                                # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                                result = project_client.get_projects()
                                if result.get('success'):
                                    projects = result.get('projects', [])
                                    project_id = None
                                    for project in projects:
                                        if project.get('name') == project_name:
                                            project_id = project.get('id')
                                            break
                                    
                                    if project_id:
                                        delete_result = project_client.delete_project(project_id)
                                        if delete_result.get('success'):
                                            server_success = True
                                            server_message = " –∏ —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞"
                                        else:
                                            server_message = f" (–æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞: {delete_result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                                    else:
                                        server_message = " (–ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)"
                                else:
                                    server_message = f" (–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤: {result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                            else:
                                server_message = " (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)"
                                
                        except Exception as e:
                            server_message = f" (–æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {str(e)})"
                        
                        if local_success:
                            # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
                            projects_listbox.delete(index)
                            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
                            self.update_projects_list()
                            
                            # –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –±—ã–ª –≤—ã–±—Ä–∞–Ω, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π
                            if self.project_var.get() == project_name:
                                remaining_projects = self.file_manager.get_global_projects()
                                if remaining_projects:
                                    self.project_var.set(remaining_projects[0])
                                else:
                                    self.project_var.set("–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç")
                            
                            # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                            pass
                        else:
                            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
                else:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            
            def close_dialog():
                dialog.destroy()
            
            # –ö–Ω–æ–ø–∫–∏
            ttk.Button(buttons_frame, text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", style='Secondary.TButton', command=delete_project).pack(side=tk.LEFT, padx=(0, 10))
            ttk.Button(buttons_frame, text="–ó–∞–∫—Ä—ã—Ç—å", style='Modern.TButton', command=close_dialog).pack(side=tk.RIGHT)
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏: {str(e)}")
            
    
    def continue_to_main(self):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É"""
        if self.selected_project:
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            self.file_manager.set_current_project(self.selected_project)
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
            self.root.destroy()
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
            try:
                from ui.modern_main_window import ModernDefectAnalyzerWindow
                main_app = ModernDefectAnalyzerWindow(self.user_info)
                main_app.run()
            except Exception as e:
                import tkinter.messagebox as messagebox
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {str(e)}")
        else:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π")
    
    def update_projects_list(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–æ–µ–∫—Ç–æ–≤"""
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
        if hasattr(self, 'projects_tree'):
            for item in self.projects_tree.get_children():
                self.projects_tree.delete(item)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
        projects = self.file_manager.get_global_projects()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –æ–±—ä–µ–∫—Ç–æ–≤
        for project in projects:
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ
            objects_count = len(self.file_manager.get_objects_for_project(project))
            self.projects_tree.insert('', tk.END, values=(project, objects_count))
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if projects:
            first_item = self.projects_tree.get_children()[0]
            self.projects_tree.selection_set(first_item)
            self.project_var.set(projects[0])
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
            self.continue_btn.config(state="normal")
    
    def on_project_tree_select(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
        selection = self.projects_tree.selection()
        if selection:
            item = self.projects_tree.item(selection[0])
            project_name = item['values'][0]
            self.project_var.set(project_name)
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            self.update_objects_list(project_name)
            print(f"–í—ã–±—Ä–∞–Ω –ø—Ä–æ–µ–∫—Ç: {project_name}")
    
    def on_project_tree_double_click(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É"""
        selection = self.projects_tree.selection()
        if selection:
            item = self.projects_tree.item(selection[0])
            project_name = item['values'][0]
            self.project_var.set(project_name)
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É
            self.update_objects_list(project_name)
            # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç—ã, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≥–ª–∞–≤–Ω–æ–º—É –æ–∫–Ω—É
            if hasattr(self, 'objects_tree'):
                objects = self.file_manager.get_objects_for_project(project_name)
                if objects:
                    self.selected_project = objects[0]
                    self.continue_to_main()
        
    def update_objects_list(self, project_name):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É –æ–±—ä–µ–∫—Ç–æ–≤
        if hasattr(self, 'objects_tree'):
            for item in self.objects_tree.get_children():
                self.objects_tree.delete(item)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
        objects = []
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç—ã —á–µ—Ä–µ–∑ API
        if self.project_api_client and self.user_info:
            try:
                # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
                projects_result = self.project_api_client.get_projects()
                if projects_result.get('success'):
                    projects = projects_result.get('projects', [])
                    project_id = None
                    for project in projects:
                        if project.get('name') == project_name:
                            project_id = project.get('id')
                            break
                    
                    if project_id:
                        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ API
                        objects_result = self.project_api_client.get_objects_by_project(project_id)
                        if objects_result.get('success'):
                            api_objects = objects_result.get('objects', [])
                            objects = [obj.get('name') for obj in api_objects]
                            
                            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏
                            local_objects = self.file_manager.get_objects_for_project(project_name)
                            for obj_name in objects:
                                if obj_name not in local_objects:
                                    self.file_manager.add_object_to_project(project_name, obj_name)
                        else:
                            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ API: {objects_result.get('error')}")
                            # Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º
                            objects = self.file_manager.get_objects_for_project(project_name)
                    else:
                        print(f"–ü—Ä–æ–µ–∫—Ç '{project_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                        # Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º
                        objects = self.file_manager.get_objects_for_project(project_name)
                else:
                    print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ API: {projects_result.get('error')}")
                    # Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º
                    objects = self.file_manager.get_objects_for_project(project_name)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å API: {e}")
                # Fallback –∫ –ª–æ–∫–∞–ª—å–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º
                objects = self.file_manager.get_objects_for_project(project_name)
        else:
            # –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã
            objects = self.file_manager.get_objects_for_project(project_name)
        
        if objects:
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü—É
            for object_name in objects:
                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—ä–µ–∫—Ç–∞
                try:
                    self.file_manager.set_current_project(object_name)
                    stats = self.file_manager.get_project_stats()
                    wear_info = "–ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω"
                    last_date = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∏–∑–Ω–æ—Å–µ
                    try:
                        wear_data = self.file_manager.load_wear_data()
                        if wear_data and 'total_wear' in wear_data:
                            wear_info = f"{wear_data['total_wear']:.1f}%"
                    except:
                        pass
                    
                    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    if stats.get('last_activity'):
                        last_date = stats['last_activity'].strftime("%d.%m.%Y")
                    
                    self.objects_tree.insert('', tk.END, values=(object_name, wear_info, last_date))
                except:
                    self.objects_tree.insert('', tk.END, values=(object_name, "–ù–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"))
            
            # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            if objects:
                first_item = self.objects_tree.get_children()[0]
                self.objects_tree.selection_set(first_item)
                self.selected_project = objects[0]
                # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
                self.continue_btn.config(state="normal")
        else:
            # –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ iOS-—Å—Ç–∏–ª–µ
            self.show_empty_state()
            # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
            self.continue_btn.config(state="disabled")
    
    def show_empty_state(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ iOS-—Å—Ç–∏–ª–µ"""
        # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        for item in self.objects_tree.get_children():
            self.objects_tree.delete(item)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.objects_tree.insert('', tk.END, values=(f"{self.icons['empty']}", "", ""))  # –ò–∫–æ–Ω–∫–∞ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.objects_tree.insert('', tk.END, values=("–í —ç—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ø–æ–∫–∞ –Ω–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤", "", ""))
        self.objects_tree.insert('', tk.END, values=("", "", ""))  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        self.objects_tree.insert('', tk.END, values=("–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã", "", ""))
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        for item in self.objects_tree.get_children():
            self.objects_tree.set(item, 'name', '')
            self.objects_tree.set(item, 'wear', '')
            self.objects_tree.set(item, 'last_date', '')
            
    def add_new_object(self):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"""
        try:
            dialog = ProjectDialog(self.root, "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞")
            if dialog.result:
                object_name = dialog.result.strip()
                
                if object_name:
                    current_project = self.project_var.get()
                    
                    # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ API
                    api_success = False
                    if self.project_api_client and self.user_info:
                        try:
                            # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
                            projects_result = self.project_api_client.get_projects()
                            if projects_result.get('success'):
                                projects = projects_result.get('projects', [])
                                project_id = None
                                for project in projects:
                                    if project.get('name') == current_project:
                                        project_id = project.get('id')
                                        break
                                
                                if project_id:
                                    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ API
                                    create_result = self.project_api_client.create_object(
                                        project_id=project_id,
                                        name=object_name
                                    )
                                    if create_result.get('success'):
                                        api_success = True
                                        print(f"–û–±—ä–µ–∫—Ç '{object_name}' —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API")
                                    else:
                                        print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ API: {create_result.get('error')}")
                                else:
                                    print(f"–ü—Ä–æ–µ–∫—Ç '{current_project}' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ API: {e}")
                    
                    # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
                    local_success = self.file_manager.add_object_to_project(current_project, object_name)
                    
                    if api_success or local_success:
                        self.selected_project = object_name
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
                        self.update_objects_list(current_project)
                        # –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                    else:
                        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç")
                else:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: {str(e)}")
            
    def manage_objects(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏"""
        try:
            # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏
            dialog = tk.Toplevel(self.root)
            dialog.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏")
            dialog.geometry("500x400")
            dialog.resizable(False, False)
            dialog.transient(self.root)
            dialog.grab_set()
            
            # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ–∫–Ω–æ
            dialog.update_idletasks()
            x = (dialog.winfo_screenwidth() // 2) - (500 // 2)
            y = (dialog.winfo_screenheight() // 2) - (400 // 2)
            dialog.geometry(f"500x400+{x}+{y}")
            
            # –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏–∞–ª–æ–≥–∞
            main_frame = ttk.Frame(dialog, padding=20)
            main_frame.pack(fill=tk.BOTH, expand=True)
            
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            title_label = ttk.Label(main_frame, text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏", style='Title.TLabel')
            title_label.pack(pady=(0, 20))
            
            # –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
            objects_frame = ttk.LabelFrame(main_frame, text="–°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤", padding=15)
            objects_frame.pack(fill=tk.BOTH, expand=True, pady=(0, 20))
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            current_project = self.project_var.get()
            current_objects = self.file_manager.get_objects_for_project(current_project)
            
            # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
            objects_listbox = tk.Listbox(
                objects_frame,
                font=('Segoe UI', 11),
                selectmode=tk.SINGLE,
                relief='flat',
                borderwidth=1
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã –≤ —Å–ø–∏—Å–æ–∫
            for object_name in current_objects:
                objects_listbox.insert(tk.END, object_name)
            
            # –°–∫—Ä–æ–ª–ª–±–∞—Ä
            scrollbar = ttk.Scrollbar(objects_frame, orient=tk.VERTICAL, command=objects_listbox.yview)
            objects_listbox.configure(yscrollcommand=scrollbar.set)
            
            # –†–∞–∑–º–µ—â–µ–Ω–∏–µ
            objects_listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
            scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
            
            # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
            buttons_frame = ttk.Frame(main_frame)
            buttons_frame.pack(fill=tk.X)
            
            def delete_object():
                selection = objects_listbox.curselection()
                if selection:
                    index = selection[0]
                    object_name = objects_listbox.get(index)
                    
                    # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ API
                    api_success = False
                    if self.project_api_client and self.user_info:
                        try:
                            # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
                            projects_result = self.project_api_client.get_projects()
                            if projects_result.get('success'):
                                projects = projects_result.get('projects', [])
                                project_id = None
                                for project in projects:
                                    if project.get('name') == current_project:
                                        project_id = project.get('id')
                                        break
                                
                                if project_id:
                                    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ ID –æ–±—ä–µ–∫—Ç–∞
                                    objects_result = self.project_api_client.get_objects_by_project(project_id)
                                    if objects_result.get('success'):
                                        api_objects = objects_result.get('objects', [])
                                        object_id = None
                                        for obj in api_objects:
                                            if obj.get('name') == object_name:
                                                object_id = obj.get('id')
                                                break
                                        
                                        if object_id:
                                            # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç —á–µ—Ä–µ–∑ API
                                            delete_result = self.project_api_client.delete_object(object_id)
                                            if delete_result.get('success'):
                                                api_success = True
                                                print(f"–û–±—ä–µ–∫—Ç '{object_name}' —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ API")
                                            else:
                                                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ API: {delete_result.get('error')}")
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ API: {e}")
                    
                    # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
                    local_success = self.file_manager.remove_object_from_project(current_project, object_name)
                    
                    if api_success or local_success:
                        # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
                        objects_listbox.delete(index)
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
                        self.update_objects_list(current_project)
                        # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                    else:
                        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç")
                else:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            
            def close_dialog():
                dialog.destroy()
            
            # –ö–Ω–æ–ø–∫–∏
            ttk.Button(buttons_frame, text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç", style='Secondary.TButton', command=delete_object).pack(side=tk.LEFT, padx=(0, 10))
            ttk.Button(buttons_frame, text="–ó–∞–∫—Ä—ã—Ç—å", style='Modern.TButton', command=close_dialog).pack(side=tk.RIGHT)
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏: {str(e)}")
            
    def create_new_project(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"""
        try:
            dialog = ProjectDialog(self.root, "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")
            if dialog.result:
                project_name = dialog.result.strip()
                
                if project_name:
                    if self.file_manager.create_new_project(project_name):
                        self.selected_project = project_name
                        messagebox.showinfo("–£—Å–ø–µ—Ö", f"–ü—Ä–æ–µ–∫—Ç '{project_name}' —Å–æ–∑–¥–∞–Ω")
                        self.continue_to_main()
                    else:
                        messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
                else:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞: {str(e)}")
                
    def manage_projects(self):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏"""
        dialog = ProjectManagerDialog(self.root, self.file_manager)
        if dialog.projects_changed:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
            self.root.destroy()
            project_window = ProjectSelectionWindow(self.user_info)
            project_window.run()
            
            
    def logout(self):
        """–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã"""
        try:
            from adapters.auth_client import auth_client
            auth_client.logout()
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –æ–∫–Ω–æ
            self.root.destroy()
            
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É –æ–∫–Ω—É
            welcome = WelcomeWindow()
            welcome.run()
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã: {str(e)}")
    
    def sync_projects_from_server(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞"""
        print("‚òÅÔ∏è –ö–Ω–æ–ø–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –æ–∫–Ω–µ –≤—ã–±–æ—Ä–∞ –Ω–∞–∂–∞—Ç–∞!")
        
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
            from adapters.project_api_client import get_project_api_client
            from adapters.auth_client import auth_client
            
            print(f"üîê –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {auth_client.is_authenticated()}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            if not auth_client.is_authenticated():
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
            project_client = get_project_api_client(auth_client)
            print(f"üì° –ö–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω: {project_client}")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
            result = project_client.get_projects()
            print(f"üì• –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
            if result.get('success'):
                projects = result.get('projects', [])
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(projects)}")
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
                local_projects = self.file_manager.get_global_projects()
                server_project_names = [project.get('name', '') for project in projects if project.get('name')]
                
                # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                created_count = 0
                for project_name in server_project_names:
                    if self.file_manager.add_global_project(project_name):
                        created_count += 1
                
                # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                removed_count = 0
                removed_projects = []
                for local_project in local_projects:
                    if local_project not in server_project_names and local_project != "–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç":
                        # –ù–µ —É–¥–∞–ª—è–µ–º "–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç" - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
                        if self.file_manager.remove_global_project(local_project):
                            removed_count += 1
                            removed_projects.append(local_project)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
                self.update_projects_list()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                current_project = self.project_var.get()
                if current_project:
                    self.update_objects_list(current_project)
                
                # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                pass
            else:
                error_msg = result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                print(f"‚ùå –û—à–∏–±–∫–∞: {error_msg}")
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤: {error_msg}")
                
        except Exception as e:
            print(f"üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
            import traceback
            traceback.print_exc()
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤: {str(e)}")
    
    def auto_sync_projects(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ"""
        def sync_in_background():
            try:
                # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
                from adapters.project_api_client import get_project_api_client
                from adapters.auth_client import auth_client
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                if not auth_client.is_authenticated():
                    print("üîê –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ - –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
                    return
                
                print("üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤...")
                
                # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
                project_client = get_project_api_client(auth_client)
                
                # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
                result = project_client.get_projects()
                
                if result.get('success'):
                    projects = result.get('projects', [])
                    server_project_names = [project.get('name', '') for project in projects if project.get('name')]
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
                    local_projects = self.file_manager.get_global_projects()
                    
                    # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                    created_count = 0
                    for project_name in server_project_names:
                        if self.file_manager.add_global_project(project_name):
                            created_count += 1
                    
                    # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                    removed_count = 0
                    for local_project in local_projects:
                        if local_project not in server_project_names and local_project != "–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç":
                            if self.file_manager.remove_global_project(local_project):
                                removed_count += 1
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
                    self.root.after(0, self._update_ui_after_auto_sync, created_count, removed_count, len(projects))
                    
                    print(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —Å–æ–∑–¥–∞–Ω–æ {created_count}, —É–¥–∞–ª–µ–Ω–æ {removed_count}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                    
            except Exception as e:
                print(f"üí• –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        threading.Thread(target=sync_in_background, daemon=True).start()
    
    def _update_ui_after_auto_sync(self, created_count, removed_count, total_projects):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ—Å–ª–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"""
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            self.update_projects_list()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
            current_project = self.project_var.get()
            if current_project:
                self.update_objects_list(current_project)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if created_count > 0 or removed_count > 0:
                sync_message = f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n"
                sync_message += f"‚Ä¢ –ü—Ä–æ–µ–∫—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞: {total_projects}\n"
                sync_message += f"‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö: {created_count}\n"
                sync_message += f"‚Ä¢ –£–¥–∞–ª–µ–Ω–æ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö: {removed_count}"
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
                print(f"üì¢ {sync_message}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
    
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –æ–∫–Ω–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
        self.root.mainloop()


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ
    welcome = WelcomeWindow()
    welcome.run()
