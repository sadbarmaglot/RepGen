import tkinter as tk
from tkinter import ttk, messagebox, simpledialog
from pathlib import Path

class ProjectDialog:
    """–î–∏–∞–ª–æ–≥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"""
    
    def __init__(self, parent, title="–ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç"):
        self.result = None
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
        self.dialog = tk.Toplevel(parent)
        self.dialog.title(title)
        self.dialog.geometry("400x200")
        self.dialog.resizable(False, False)
        self.dialog.transient(parent)
        self.dialog.grab_set()
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–∫–Ω–∞
        self.center_window(parent)
        
        self.create_widgets()
        
        # –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
        self.name_entry.focus()
        
        # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
        self.dialog.wait_window()
        
    def center_window(self, parent):
        """–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—è"""
        parent.update_idletasks()
        x = parent.winfo_x() + (parent.winfo_width() // 2) - 200
        y = parent.winfo_y() + (parent.winfo_height() // 2) - 100
        self.dialog.geometry(f"+{x}+{y}")
        
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–∏–∞–ª–æ–≥–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = ttk.Label(
            self.dialog, 
            text="–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞", 
            font=("Arial", 12, "bold")
        )
        header.pack(pady=(20, 10))
        
        # –§–æ—Ä–º–∞
        form_frame = ttk.Frame(self.dialog)
        form_frame.pack(fill=tk.X, padx=20, pady=10)
        
        ttk.Label(form_frame, text="–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞:").pack(anchor=tk.W)
        
        self.name_entry = ttk.Entry(form_frame, width=40)
        self.name_entry.pack(fill=tk.X, pady=(5, 10))
        self.name_entry.bind('<Return>', lambda e: self.ok_clicked())
        
        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
        note = ttk.Label(
            form_frame, 
            text="–ù–∞–ø—Ä–∏–º–µ—Ä: '–ñ–ö –°–æ–ª–Ω–µ—á–Ω—ã–π', '–û—Ñ–∏—Å–Ω–æ–µ –∑–¥–∞–Ω–∏–µ –Ω–∞ –ù–µ–≤—Å–∫–æ–º'",
            foreground="gray"
        )
        note.pack(anchor=tk.W)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_frame = ttk.Frame(self.dialog)
        buttons_frame.pack(side=tk.BOTTOM, fill=tk.X, padx=20, pady=20)
        
        ttk.Button(
            buttons_frame, 
            text="–û—Ç–º–µ–Ω–∞", 
            command=self.cancel_clicked
        ).pack(side=tk.RIGHT, padx=(5, 0))
        
        ttk.Button(
            buttons_frame, 
            text="–°–æ–∑–¥–∞—Ç—å", 
            command=self.ok_clicked
        ).pack(side=tk.RIGHT)
        
    def ok_clicked(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –û–ö"""
        name = self.name_entry.get().strip()
        
        if not name:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞")
            return
            
        if len(name) > 100:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤)")
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
        invalid_chars = '<>:"/\\|?*'
        if any(char in name for char in invalid_chars):
            messagebox.showwarning(
                "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                f"–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã: {invalid_chars}"
            )
            return
            
        self.result = name
        self.dialog.destroy()
        
    def cancel_clicked(self):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –û—Ç–º–µ–Ω–∞"""
        self.dialog.destroy()

class ProjectManagerDialog:
    """–î–∏–∞–ª–æ–≥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞–º–∏"""
    
    def __init__(self, parent, file_manager):
        self.file_manager = file_manager
        self.projects_changed = False
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
        self.dialog = tk.Toplevel(parent)
        self.dialog.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏")
        self.dialog.geometry("600x400")
        self.dialog.transient(parent)
        self.dialog.grab_set()
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–∫–Ω–∞
        self.center_window(parent)
        
        self.create_widgets()
        self.load_projects()
        
        # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
        self.dialog.wait_window()
        
    def center_window(self, parent):
        """–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—è"""
        parent.update_idletasks()
        x = parent.winfo_x() + (parent.winfo_width() // 2) - 300
        y = parent.winfo_y() + (parent.winfo_height() // 2) - 200
        self.dialog.geometry(f"+{x}+{y}")
        
    def create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤ –¥–∏–∞–ª–æ–≥–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = ttk.Label(
            self.dialog, 
            text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞–º–∏", 
            font=("Arial", 14, "bold")
        )
        header.pack(pady=(10, 20))
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å
        main_frame = ttk.Frame(self.dialog)
        main_frame.pack(fill=tk.BOTH, expand=True, padx=20, pady=(0, 20))
        
        # –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤
        list_frame = ttk.LabelFrame(main_frame, text="–û–±—ä–µ–∫—Ç—ã (–¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ –∏–∑–Ω–æ—Å—É –∏–ª–∏ –¥–∞—Ç–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)", padding=10)
        list_frame.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=(0, 10))
        
        # –°–æ–∑–¥–∞–µ–º Treeview –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤
        columns = ('name', 'wear', 'last_activity')
        self.projects_tree = ttk.Treeview(list_frame, columns=columns, show='headings', height=12)
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        self.projects_tree.heading('name', text='–ù–∞–∑–≤–∞–Ω–∏–µ')
        self.projects_tree.heading('wear', text='–ò–∑–Ω–æ—Å –∑–¥–∞–Ω–∏—è')
        self.projects_tree.heading('last_activity', text='–î–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è')
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
        self.projects_tree.column('name', width=250)
        self.projects_tree.column('wear', width=100)
        self.projects_tree.column('last_activity', width=120)
        
        # –°–∫—Ä–æ–ª–ª–±–∞—Ä
        scrollbar = ttk.Scrollbar(list_frame, orient=tk.VERTICAL, command=self.projects_tree.yview)
        self.projects_tree.configure(yscrollcommand=scrollbar.set)
        
        self.projects_tree.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞
        self.projects_tree.bind('<Double-1>', self.on_double_click)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttons_frame = ttk.LabelFrame(main_frame, text="–î–µ–π—Å—Ç–≤–∏—è", padding=10)
        buttons_frame.pack(side=tk.RIGHT, fill=tk.Y)
        
        ttk.Button(
            buttons_frame,
            text="‚ûï –°–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç",
            command=self.create_project
        ).pack(fill=tk.X, pady=2)
        
        ttk.Button(
            buttons_frame,
            text="üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å",
            command=self.rename_project
        ).pack(fill=tk.X, pady=2)
        
        ttk.Button(
            buttons_frame,
            text="üìÇ –û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É",
            command=self.open_project_folder
        ).pack(fill=tk.X, pady=2)
        
        ttk.Button(
            buttons_frame,
            text="üèóÔ∏è –ò–∑–Ω–æ—Å –∑–¥–∞–Ω–∏—è",
            command=self.edit_selected_wear
        ).pack(fill=tk.X, pady=2)
        
        ttk.Button(
            buttons_frame,
            text="üìÖ –î–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
            command=self.edit_selected_survey_date
        ).pack(fill=tk.X, pady=2)
        
        ttk.Separator(buttons_frame, orient=tk.HORIZONTAL).pack(fill=tk.X, pady=10)
        
        ttk.Button(
            buttons_frame,
            text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç",
            command=self.delete_project
        ).pack(fill=tk.X, pady=2)
        
        ttk.Separator(buttons_frame, orient=tk.HORIZONTAL).pack(fill=tk.X, pady=10)
        
        
        ttk.Button(
            buttons_frame,
            text="‚òÅÔ∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å",
            command=self.sync_projects_from_server
        ).pack(fill=tk.X, pady=2)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        close_frame = ttk.Frame(self.dialog)
        close_frame.pack(side=tk.BOTTOM, fill=tk.X, padx=20, pady=10)
        
        ttk.Button(
            close_frame,
            text="–ó–∞–∫—Ä—ã—Ç—å",
            command=self.dialog.destroy
        ).pack(side=tk.RIGHT)
        
    def load_projects(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤"""
        # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
        self.projects_tree.delete(*self.projects_tree.get_children())
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä–µ–∫—Ç—ã
        projects = self.file_manager.get_all_projects()
        
        for project in projects:
            stats = self.file_manager.get_project_stats(project)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
            survey_date = self.file_manager.get_survey_date(project)
            if not survey_date:
                # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–∫ fallback
                if stats['last_activity']:
                    survey_date = stats['last_activity'].strftime("%d.%m.%Y")
                else:
                    survey_date = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–∑–Ω–æ—Å –∑–¥–∞–Ω–∏—è
            wear_percentage = self.file_manager.get_building_wear(project)
                
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –¥–µ—Ä–µ–≤–æ
            self.projects_tree.insert('', tk.END, values=(
                project,
                wear_percentage,
                survey_date
            ))
            
    def create_project(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"""
        dialog = ProjectDialog(self.dialog, "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞")
        if dialog.result:
            project_name = dialog.result.strip()
            
            # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            local_success = self.file_manager.create_new_project(project_name)
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            server_success = False
            server_message = ""
            
            try:
                from adapters.project_api_client import get_project_api_client
                from adapters.auth_client import auth_client
                
                if auth_client.is_authenticated():
                    project_client = get_project_api_client(auth_client)
                    result = project_client.create_project(project_name)
                    
                    if result.get('success'):
                        server_success = True
                        server_message = " –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Å–µ—Ä–≤–µ—Ä–æ–º"
                    else:
                        server_message = f" (–æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                else:
                    server_message = " (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)"
                    
            except Exception as e:
                server_message = f" (–æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {str(e)})"
            
            if local_success:
                self.load_projects()
                self.projects_changed = True
                
                # –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                pass
            else:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç")
                
    def rename_project(self):
        """–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞"""
        selection = self.projects_tree.selection()
        if not selection:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è")
            return
            
        item = self.projects_tree.item(selection[0])
        old_name = item['values'][0]
        
        if old_name == "–û–±—â–∏–π –æ–±—ä–µ–∫—Ç":
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç")
            return
            
        new_name = simpledialog.askstring(
            "–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞",
            f"–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è '{old_name}':",
            initialvalue=old_name
        )
        
        if new_name and new_name.strip() and new_name.strip() != old_name:
            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ
            local_success = False
            try:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å –Ω–æ–≤—ã–º –∏–º–µ–Ω–µ–º
                if self.file_manager.create_new_project(new_name.strip()):
                    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                    old_dirs = self.file_manager.get_project_directories(old_name)
                    new_dirs = self.file_manager.get_project_directories(new_name.strip())
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
                    import shutil
                    for old_dir, new_dir in zip(old_dirs.values(), new_dirs.values()):
                        if old_dir.exists() and not new_dir.exists():
                            shutil.copytree(old_dir, new_dir)
                    
                    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ–µ–∫—Ç
                    self.file_manager.delete_project(old_name)
                    local_success = True
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: {str(e)}")
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            server_success = False
            server_message = ""
            
            try:
                from adapters.project_api_client import get_project_api_client
                from adapters.auth_client import auth_client
                
                if auth_client.is_authenticated():
                    project_client = get_project_api_client(auth_client)
                    
                    # –ù–∞—Ö–æ–¥–∏–º ID —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                    result = project_client.get_projects()
                    if result.get('success'):
                        projects = result.get('projects', [])
                        project_id = None
                        for project in projects:
                            if project.get('name') == old_name:
                                project_id = project.get('id')
                                break
                        
                        if project_id:
                            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                            update_result = project_client.update_project(project_id, name=new_name.strip())
                            if update_result.get('success'):
                                server_success = True
                                server_message = " –∏ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
                            else:
                                server_message = f" (–æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {update_result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                        else:
                            server_message = " (–ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)"
                    else:
                        server_message = f" (–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤: {result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                else:
                    server_message = " (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ - –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)"
                    
            except Exception as e:
                server_message = f" (–æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {str(e)})"
            
            if local_success:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
                self.load_projects()
                self.projects_changed = True
                
                # –£—Å–ø–µ—à–Ω–æ–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                pass
            else:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
            
    def delete_project(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞"""
        selection = self.projects_tree.selection()
        if not selection:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
            return
            
        item = self.projects_tree.item(selection[0])
        project_name = item['values'][0]
        
        if project_name == "–û–±—â–∏–π –æ–±—ä–µ–∫—Ç":
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç")
            return
            
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        if messagebox.askyesno(
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
            f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç '{project_name}'?\n\n"
            "–í—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–Ω–∞–ª–∏–∑—ã –∏ –æ—Ç—á–µ—Ç—ã –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ!"
        ):
            # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
            local_success = self.file_manager.delete_project(project_name)
            
            # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞
            server_success = False
            server_message = ""
            
            try:
                from adapters.project_api_client import get_project_api_client
                from adapters.auth_client import auth_client
                
                if auth_client.is_authenticated():
                    project_client = get_project_api_client(auth_client)
                    
                    # –ù–∞—Ö–æ–¥–∏–º ID –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                    result = project_client.get_projects()
                    if result.get('success'):
                        projects = result.get('projects', [])
                        project_id = None
                        for project in projects:
                            if project.get('name') == project_name:
                                project_id = project.get('id')
                                break
                        
                        if project_id:
                            delete_result = project_client.delete_project(project_id)
                            if delete_result.get('success'):
                                server_success = True
                                server_message = " –∏ —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞"
                            else:
                                server_message = f" (–æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞: {delete_result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                        else:
                            server_message = " (–ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)"
                    else:
                        server_message = f" (–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤: {result.get('error', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')})"
                else:
                    server_message = " (—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ - –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)"
                    
            except Exception as e:
                server_message = f" (–æ—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {str(e)})"
            
            if local_success:
                self.load_projects()
                self.projects_changed = True
                
                # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                pass
            else:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –æ–±—ä–µ–∫—Ç")
                
    def open_project_folder(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –ø–∞–ø–∫–∏ –æ–±—ä–µ–∫—Ç–∞"""
        selection = self.projects_tree.selection()
        if not selection:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç")
            return
            
        item = self.projects_tree.item(selection[0])
        project_name = item['values'][0]
        
        dirs = self.file_manager.get_project_directories(project_name)
        folder_path = str(dirs['project_dir'])
        
        try:
            import os
            import subprocess
            
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ (–ø–æ–ø—ã—Ç–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –û–°)
            if os.name == 'nt':  # Windows
                os.startfile(folder_path)
            elif os.name == 'posix':  # macOS/Linux
                subprocess.run(['open', folder_path])
            else:
                subprocess.run(['xdg-open', folder_path])
                
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É: {e}")
    
    def on_double_click(self, event):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞"""
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        selection = self.projects_tree.selection()
        if not selection:
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–∫–µ
        region = self.projects_tree.identify("region", event.x, event.y)
        if region != "cell":
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–æ–Ω–∫—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∫–ª–∏–∫–Ω—É–ª–∏
        column = self.projects_tree.identify_column(event.x)
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        item = self.projects_tree.item(selection[0])
        project_name = item['values'][0]
        
        if column == '#2':  # –ö–æ–ª–æ–Ω–∫–∞ "–ò–∑–Ω–æ—Å –∑–¥–∞–Ω–∏—è"
            current_wear = item['values'][1]
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞
            self.edit_wear_dialog(project_name, current_wear)
        elif column == '#3':  # –ö–æ–ª–æ–Ω–∫–∞ "–î–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"
            current_date = item['values'][2]
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
            self.edit_survey_date_dialog(project_name, current_date)
    
    def edit_wear_dialog(self, project_name: str, current_wear: str):
        """–î–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞ –∑–¥–∞–Ω–∏—è"""
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
        dialog = tk.Toplevel(self.dialog)
        dialog.title(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–Ω–æ—Å–∞ - {project_name}")
        dialog.geometry("400x200")
        dialog.resizable(False, False)
        dialog.transient(self.dialog)
        dialog.grab_set()
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–∫–Ω–∞
        dialog.update_idletasks()
        x = self.dialog.winfo_x() + (self.dialog.winfo_width() // 2) - 200
        y = self.dialog.winfo_y() + (self.dialog.winfo_height() // 2) - 100
        dialog.geometry(f"+{x}+{y}")
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = ttk.Label(
            dialog, 
            text=f"–ò–∑–Ω–æ—Å –∑–¥–∞–Ω–∏—è: {project_name}", 
            font=("Arial", 12, "bold")
        )
        header.pack(pady=(20, 10))
        
        # –§–æ—Ä–º–∞
        form_frame = ttk.Frame(dialog)
        form_frame.pack(fill=tk.X, padx=20, pady=10)
        
        ttk.Label(form_frame, text="–ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–Ω–æ—Å–∞ (%):").pack(anchor=tk.W)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (—É–±–∏—Ä–∞–µ–º "%" –µ—Å–ª–∏ –µ—Å—Ç—å)
        current_value = "0"
        if current_wear and current_wear != "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö" and current_wear != "–û—à–∏–±–∫–∞":
            current_value = current_wear.replace("%", "").strip()
        
        wear_entry = ttk.Entry(form_frame, width=10)
        wear_entry.pack(fill=tk.X, pady=(5, 10))
        wear_entry.insert(0, current_value)
        wear_entry.focus()
        wear_entry.select_range(0, tk.END)
        
        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
        note = ttk.Label(
            form_frame, 
            text="–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0 –¥–æ 100. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Å–±—Ä–æ—Å–∞.",
            foreground="gray"
        )
        note.pack(anchor=tk.W)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_frame = ttk.Frame(dialog)
        buttons_frame.pack(side=tk.BOTTOM, fill=tk.X, padx=20, pady=20)
        
        def save_wear():
            """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–Ω–æ—Å–∞"""
            value = wear_entry.get().strip()
            
            if not value:
                # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–∑–Ω–æ—Å–µ
                self.file_manager.delete_building_wear(project_name)
                # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
            else:
                try:
                    wear_percentage = float(value)
                    if wear_percentage < 0 or wear_percentage > 100:
                        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ó–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 0 –¥–æ 100")
                        return
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –∏–∑–Ω–æ—Å–µ
                    self.file_manager.save_building_wear(project_name, wear_percentage)
                    # –£—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                except ValueError:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
                    return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            self.load_projects()
            self.projects_changed = True
            dialog.destroy()
        
        def cancel_edit():
            """–û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
            dialog.destroy()
        
        ttk.Button(
            buttons_frame, 
            text="–û—Ç–º–µ–Ω–∞", 
            command=cancel_edit
        ).pack(side=tk.RIGHT, padx=(5, 0))
        
        ttk.Button(
            buttons_frame, 
            text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", 
            command=save_wear
        ).pack(side=tk.RIGHT)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º Enter –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é
        wear_entry.bind('<Return>', lambda e: save_wear())
        
        # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
        dialog.wait_window()
    
    def edit_survey_date_dialog(self, project_name: str, current_date: str):
        """–î–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ
        dialog = tk.Toplevel(self.dialog)
        dialog.title(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è - {project_name}")
        dialog.geometry("400x200")
        dialog.resizable(False, False)
        dialog.transient(self.dialog)
        dialog.grab_set()
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–∫–Ω–∞
        dialog.update_idletasks()
        x = self.dialog.winfo_x() + (self.dialog.winfo_width() // 2) - 200
        y = self.dialog.winfo_y() + (self.dialog.winfo_height() // 2) - 100
        dialog.geometry(f"+{x}+{y}")
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = ttk.Label(
            dialog, 
            text=f"–î–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: {project_name}", 
            font=("Arial", 12, "bold")
        )
        header.pack(pady=(20, 10))
        
        # –§–æ—Ä–º–∞
        form_frame = ttk.Frame(dialog)
        form_frame.pack(fill=tk.X, padx=20, pady=10)
        
        ttk.Label(form_frame, text="–î–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (–î–î.–ú–ú.–ì–ì–ì–ì):").pack(anchor=tk.W)
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        current_value = ""
        if current_date and current_date != "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö":
            current_value = current_date
        
        date_entry = ttk.Entry(form_frame, width=15)
        date_entry.pack(fill=tk.X, pady=(5, 10))
        date_entry.insert(0, current_value)
        date_entry.focus()
        date_entry.select_range(0, tk.END)
        
        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
        note = ttk.Label(
            form_frame, 
            text="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì. –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Å–±—Ä–æ—Å–∞.",
            foreground="gray"
        )
        note.pack(anchor=tk.W)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_frame = ttk.Frame(dialog)
        buttons_frame.pack(side=tk.BOTTOM, fill=tk.X, padx=20, pady=20)
        
        def save_date():
            """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
            value = date_entry.get().strip()
            
            if not value:
                # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–∞—Ç–µ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                self.file_manager.delete_survey_date(project_name)
                # –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
                try:
                    from datetime import datetime
                    # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏
                    parsed_date = datetime.strptime(value, "%d.%m.%Y")
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –Ω–µ –≤ –±—É–¥—É—â–µ–º
                    if parsed_date > datetime.now():
                        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º")
                        return
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                    self.file_manager.save_survey_date(project_name, value)
                    # –£—Å–ø–µ—à–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–∏–∞–ª–æ–≥–∞
                except ValueError:
                    messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì")
                    return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
            self.load_projects()
            self.projects_changed = True
            dialog.destroy()
        
        def cancel_edit():
            """–û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
            dialog.destroy()
        
        ttk.Button(
            buttons_frame, 
            text="–û—Ç–º–µ–Ω–∞", 
            command=cancel_edit
        ).pack(side=tk.RIGHT, padx=(5, 0))
        
        ttk.Button(
            buttons_frame, 
            text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", 
            command=save_date
        ).pack(side=tk.RIGHT)
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º Enter –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é
        date_entry.bind('<Return>', lambda e: save_date())
        
        # –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–∞
        dialog.wait_window()
    
    def sync_projects_from_server(self):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞"""
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
            from adapters.project_api_client import get_project_api_client
            from adapters.auth_client import auth_client
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            if not auth_client.is_authenticated():
                messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤
            project_client = get_project_api_client(auth_client)
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞
            result = project_client.get_projects()
            
            if result.get('success'):
                projects = result.get('projects', [])
                server_project_names = [project.get('name', '') for project in projects if project.get('name')]
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
                local_projects = self.file_manager.get_all_projects()
                
                # –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                created_count = 0
                for project_name in server_project_names:
                    if project_name not in local_projects:
                        if self.file_manager.create_new_project(project_name):
                            created_count += 1
                
                # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
                removed_count = 0
                removed_projects = []
                for local_project in local_projects:
                    if local_project not in server_project_names and local_project != "–û–±—â–∏–π –æ–±—ä–µ–∫—Ç":
                        # –ù–µ —É–¥–∞–ª—è–µ–º "–û–±—â–∏–π –æ–±—ä–µ–∫—Ç" - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
                        if self.file_manager.delete_project(local_project):
                            removed_count += 1
                            removed_projects.append(local_project)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫
                self.load_projects()
                self.projects_changed = True
                
                # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
                pass
            else:
                error_msg = result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤: {error_msg}")
                
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤: {str(e)}")
    
    def edit_selected_wear(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–Ω–æ—Å–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"""
        selection = self.projects_tree.selection()
        if not selection:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞")
            return
            
        item = self.projects_tree.item(selection[0])
        project_name = item['values'][0]
        current_wear = item['values'][1]
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–Ω–æ—Å–∞
        self.edit_wear_dialog(project_name, current_wear)
    
    def edit_selected_survey_date(self):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞"""
        selection = self.projects_tree.selection()
        if not selection:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")
            return
            
        item = self.projects_tree.item(selection[0])
        project_name = item['values'][0]
        current_date = item['values'][2]
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
        self.edit_survey_date_dialog(project_name, current_date)