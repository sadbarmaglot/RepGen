# ==========================================
# üèóÔ∏è –õ–û–ö–ê–õ–¨–ù–ê–Ø –°–ë–û–†–ö–ê –£–°–¢–ê–ù–û–í–©–ò–ö–ê (PowerShell)
# ==========================================

Write-Host "==========================================" -ForegroundColor Cyan
Write-Host "üèóÔ∏è –õ–û–ö–ê–õ–¨–ù–ê–Ø –°–ë–û–†–ö–ê –£–°–¢–ê–ù–û–í–©–ò–ö–ê" -ForegroundColor Cyan
Write-Host "==========================================" -ForegroundColor Cyan

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ Inno Setup
function Find-InnoSetup {
    $paths = @(
        "${env:ProgramFiles(x86)}\Inno Setup 6\ISCC.exe",
        "${env:ProgramFiles}\Inno Setup 6\ISCC.exe",
        "${env:ProgramFiles(x86)}\Inno Setup 5\ISCC.exe",
        "${env:ProgramFiles}\Inno Setup 5\ISCC.exe"
    )
    
    foreach ($path in $paths) {
        if (Test-Path $path) {
            Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω Inno Setup: $path" -ForegroundColor Green
            return $path
        }
    }
    
    Write-Host "‚ùå Inno Setup –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å https://jrsoftware.org/isdl.php" -ForegroundColor Yellow
    Write-Host "–∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑: choco install innosetup" -ForegroundColor Yellow
    return $null
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Inno Setup
$isccPath = Find-InnoSetup
if (-not $isccPath) {
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
Write-Host ""
Write-Host "üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow

if (-not (Test-Path "build\win")) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ build\win –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ build\win\" -ForegroundColor Yellow
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ exe —Ñ–∞–π–ª–æ–≤
$exeFiles = Get-ChildItem -Path "build\win" -Filter "*.exe" -Recurse -ErrorAction SilentlyContinue
if ($exeFiles.Count -eq 0) {
    Write-Host "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –Ω–∞–π–¥–µ–Ω–æ exe —Ñ–∞–π–ª–æ–≤ –≤ build\win\" -ForegroundColor Yellow
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ" -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω—ã exe —Ñ–∞–π–ª—ã:" -ForegroundColor Green
    $exeFiles | ForEach-Object { Write-Host "  - $($_.Name)" -ForegroundColor White }
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ build/win
Write-Host ""
Write-Host "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ build\win\:" -ForegroundColor Yellow
Get-ChildItem -Path "build\win" -Recurse | ForEach-Object { 
    Write-Host "  $($_.FullName)" -ForegroundColor Gray 
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
if (-not (Test-Path "installer\windows\DefectAnalyzer.iss")) {
    Write-Host "‚ùå –§–∞–π–ª installer\windows\DefectAnalyzer.iss –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

Write-Host ""
Write-Host "üîß –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫..." -ForegroundColor Yellow
Write-Host "–ò—Å–ø–æ–ª—å–∑—É–µ–º: $isccPath" -ForegroundColor White
Write-Host "–ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º: installer\windows\DefectAnalyzer.iss" -ForegroundColor White
Write-Host ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é
try {
    & $isccPath "installer\windows\DefectAnalyzer.iss"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω!" -ForegroundColor Green
    } else {
        Write-Host ""
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞!" -ForegroundColor Red
        Write-Host "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª installer\windows\DefectAnalyzer.iss" -ForegroundColor Yellow
        Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
        exit 1
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: $($_.Exception.Message)" -ForegroundColor Red
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
Write-Host ""
Write-Host "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç..." -ForegroundColor Yellow

if (Test-Path "dist") {
    $setupFiles = Get-ChildItem -Path "dist" -Filter "*.exe" -ErrorAction SilentlyContinue
    if ($setupFiles.Count -gt 0) {
        Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∏:" -ForegroundColor Green
        $setupFiles | ForEach-Object { 
            $sizeKB = [math]::Round($_.Length / 1KB, 2)
            Write-Host "  - $($_.Name) ($sizeKB KB)" -ForegroundColor White 
        }
        
        Write-Host ""
        Write-Host "üéâ –ì–û–¢–û–í–û! –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ dist\" -ForegroundColor Green
        Write-Host "üì¶ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .exe —Ñ–∞–π–ª –Ω–∞ —Ñ–ª–µ—à–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏" -ForegroundColor Cyan
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É
        Write-Host ""
        $openFolder = Read-Host "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É dist? (y/n)"
        if ($openFolder -eq "y" -or $openFolder -eq "Y") {
            Invoke-Item "dist"
        }
    } else {
        Write-Host "‚ö†Ô∏è –í –ø–∞–ø–∫–µ dist –Ω–µ –Ω–∞–π–¥–µ–Ω–æ exe —Ñ–∞–π–ª–æ–≤" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ö†Ô∏è –ü–∞–ø–∫–∞ dist –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "==========================================" -ForegroundColor Cyan
Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
