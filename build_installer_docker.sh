#!/bin/bash
# ==========================================
# üê≥ –°–ë–û–†–ö–ê –£–°–¢–ê–ù–û–í–©–ò–ö–ê –ß–ï–†–ï–ó DOCKER (macOS -> Windows)
# ==========================================

echo "=========================================="
echo "üê≥ –°–ë–û–†–ö–ê –£–°–¢–ê–ù–û–í–©–ò–ö–ê –ß–ï–†–ï–ó DOCKER"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è macOS"
    exit 1
fi

echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if [ ! -d "build/win" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ build/win –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Windows –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ –∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ build/win/"
    exit 1
fi

echo "‚úÖ –ü–∞–ø–∫–∞ build/win –Ω–∞–π–¥–µ–Ω–∞"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ exe —Ñ–∞–π–ª–æ–≤
exe_count=$(find build/win -name "*.exe" | wc -l)
if [ $exe_count -eq 0 ]; then
    echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –Ω–∞–π–¥–µ–Ω–æ exe —Ñ–∞–π–ª–æ–≤ –≤ build/win/"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
else
    echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã exe —Ñ–∞–π–ª—ã: $exe_count"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
if [ ! -f "installer/windows/DefectAnalyzer.iss" ]; then
    echo "‚ùå –§–∞–π–ª installer/windows/DefectAnalyzer.iss –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo "‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ –Ω–∞–π–¥–µ–Ω"

echo ""
echo "üîß –°–æ–±–∏—Ä–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —á–µ—Ä–µ–∑ Docker..."
echo ""

# –°–æ–∑–¥–∞–µ–º Dockerfile –¥–ª—è —Å–±–æ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
cat > Dockerfile.installer << 'EOF'
FROM mcr.microsoft.com/windows/servercore:ltsc2019

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Chocolatey
RUN powershell -Command \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Inno Setup
RUN choco install innosetup -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
WORKDIR /workspace

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
COPY . .

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±–æ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
CMD ["powershell", "-Command", "& 'C:\\Program Files\\Inno Setup 6\\ISCC.exe' installer\\windows\\DefectAnalyzer.iss"]
EOF

# –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑
echo "üì¶ –°–æ–∑–¥–∞–µ–º Docker –æ–±—Ä–∞–∑..."
docker build -f Dockerfile.installer -t defectanalyzer-installer .

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Docker –æ–±—Ä–∞–∑–∞!"
    rm -f Dockerfile.installer
    exit 1
fi

echo "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
echo "üî® –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞..."
docker run --rm -v "$(pwd)/dist:/workspace/dist" defectanalyzer-installer

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω!"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [ -d "dist" ]; then
        echo "üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ dist:"
        ls -la dist/*.exe 2>/dev/null || echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ .exe —Ñ–∞–π–ª–æ–≤"
    fi
    
    echo ""
    echo "üéâ –ì–û–¢–û–í–û! –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ dist/"
    echo "üì¶ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .exe —Ñ–∞–π–ª –Ω–∞ —Ñ–ª–µ—à–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ Windows"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞!"
fi

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Dockerfile
rm -f Dockerfile.installer

echo ""
echo "=========================================="
