"""
Дерево конструктивных решений для каскадного выбора.
Пользователь может расширять это дерево без изменений логики UI.
"""

from typing import Dict, Any, List, Optional
import json


CONSTRUCTION_TREE: Dict[str, Any] = {
    "Фундаменты": {
        "Ленточные": {
            "Бутовые": "Фундаменты выполнены ленточными из бутовой кладки",
            "Железобетонные": {
                "Монолитные": {
                    "__custom__": {
                        "labels": ["Укажите ширину подошвы, м", "Укажите высоту, м", "Укажите тип подготовки"],
                        "callback": lambda width, height, prep: (
                            f"Конструкции фундаментов – монолитная железобетонная лента шириной подошвы {width} м и высотой от верхнего обреза до подошвы {height} м по {prep}."
                        ),
                    }
                },
                "Сборные": {
                    "__custom__": {
                        "labels": ["Укажите тип блоков", "Укажите тип гидроизоляции"],
                        "callback": lambda blocks, hydro: (
                            f"Фундаменты под стены здания – ленточные, сборные, железобетонные. Лента из {blocks}. {hydro}."
                        ),
                    }
                },
            },
        },
        "Свайные": {
            "Деревянные": "Фундаменты выполнены свайными деревянными из бруса",
            "Железобетонные": {
                "Монолитные": {
                    "__custom__": {
                        "labels": ["Укажите диаметр свай, мм", "Укажите глубину заложения, м", "Укажите тип ростверка"],
                        "callback": lambda diameter, depth, grillage: (
                            f"Фундаменты выполнены железобетонными свайными. {grillage}. В ростверк заделаны монолитные железобетонные сваи d={diameter} мм, глубиной заложения {depth} м."
                        ),
                    }
                },
                "Буронабивные": {
                    "__custom__": {
                        "labels": ["Укажите диаметры свай, мм", "Укажите глубину заложения, м", "Укажите сечение ростверка, м"],
                        "callback": lambda diameters, depth, section: (
                            f"Фундаменты выполнены из буронабивных свай с монолитными железобетонными ростверками сечением {section} м. В ростверк заделаны сваи d={diameters} мм, глубиной заложения {depth} м."
                        ),
                    }
                },
            },
        },
        "Плитные": {
            "Железобетонные": {
                "__custom__": {
                    "labels": ["Укажите толщину плиты, мм", "Укажите тип подготовки"],
                    "callback": lambda thickness, prep: (
                        f"Фундамент выполнен из монолитной железобетонной плиты толщиной {thickness} мм с {prep}."
                    ),
                }
            },
        },
        "Столбчатые": {
            "Железобетонные": {
                "Монолитные": {
                    "__custom__": {
                        "labels": ["Укажите размеры подошвы, м", "Укажите глубину заложения, м", "Укажите тип подготовки"],
                        "callback": lambda size, depth, prep: (
                            f"Выполнены монолитные столбчатые фундаменты с размерами подошвы {size} м, глубиной заложения {depth} м по {prep}."
                        ),
                    }
                },
                "Сборные": {
                    "__custom__": {
                        "labels": ["Укажите тип стаканов", "Укажите размеры, м"],
                        "callback": lambda type_cup, size: (
                            f"Фундаменты под колонны здания – сборные железобетонные, столбчатые, {type_cup} сечением {size} м."
                        ),
                    }
                },
            },
        },
        "Комбинированные": {
            "Столбчатый + Фундаментная балка": {
                "__custom__": {
                    "labels": ["Укажите размеры фундаментов, м", "Укажите глубину заложения, м"],
                    "callback": lambda size, depth: (
                        f"Фундаменты выполнены из монолитной фундаментной балки, опирающейся на отдельностоящие столбчатые монолитные железобетонные фундаменты стаканного типа сечением {size} м, глубиной заложения {depth} м."
                    ),
                }
            },
        },
    },
    "Стены": {
        "Кирпичные": {
            "__custom__": {
                "labels": ["Укажите толщину, мм"],
                "callback": lambda section: (
                    f"Стены выполнены из кирпичной кладки на цементно-песчаном растворе, толщиной {section} мм"
                ),
            }
        },
        "Железобетонные": {
            "__custom__": {
                "labels": ["Укажите серию", "Укажите марку"],
                "callback": lambda series, mark: (
                    f"Стены выполнены из навесных сборных железобетонных панелей марки {mark} по серии {series}"
                ),
            }
        },
    },
    "Перекрытия": {
        "Железобетонные": {
            "Плиты ПК": "Перекрытия выполнены из сборных железобетонных плит ПК",
            "Монолитные": "Перекрытия выполнены монолитными железобетонными",
        }
    },
}

# Дополнительные данные для предзаполнения конкретных решений
PREDEFINED_SOLUTIONS = {
    "Фундаменты под фахверковые колонны": {
        "тип": "свайный",
        "материал": "железобетон", 
        "исполнение": "монолитный",
        "описание": "Фундаменты под фахверковые колонны выполнены железобетонными свайными. Ростверки под фахверковые колонны монолитные железобетонные сечением 0,9х0,9 м, высотой 1,6 м."
    },
    "Фундаменты под стальные колонны каркаса": {
        "тип": "свайный",
        "материал": "железобетон",
        "исполнение": "монолитный", 
        "узлы_и_закладные": "монолитные железобетонные сваи d=880 мм, глубина заложения 11,95–15,45 м",
        "описание": "Фундаменты под стальные колонны каркаса здания выполнены железобетонными свайными. Колонны установлены в монолитный железобетонный ростверк со стаканом размером в плане 1,5х3,3 м, 1,5х5,2 м, высотой 1,35 м. В ростверк заделаны монолитные железобетонные сваи d=880 мм, глубиной заложения 11,95…15,45 м."
    },
    "Фундаменты в пристроях (буронабивные)": {
        "тип": "свайный (буронабивной)",
        "материал": "железобетон",
        "исполнение": "монолитный ростверк",
        "узлы_и_закладные": "сваи d=456 мм; 620 мм, глубина заложения 8…8,5 м",
        "описание": "Фундаменты в пристроях выполнены из буронабивных свай с монолитными железобетонными ростверками сечением 1,2х1,2 м, 1,2х3,5 м, 1,2х2,7 м и высотой 1,8 м. В ростверк заделаны сваи d=456 мм; 620 мм, глубиной заложения 8…8,5 м."
    },
    "Фундамент пристроя (плитный)": {
        "тип": "плитный",
        "материал": "железобетон",
        "исполнение": "монолитный",
        "описание": "Фундамент пристроя выполнен из монолитной железобетонной плиты толщиной 300 мм."
    },
    "Фундаменты под стеновое ограждение": {
        "тип": "столбчатый + фундаментная балка",
        "материал": "железобетон",
        "исполнение": "монолитный",
        "узлы_и_закладные": "фундаменты стаканного типа сечением 1,5х1,5 м, 2,1х2,1 м, 2,1х2,4 м, 2,4х2,7 м, 3,0х3,3 м, глубина заложения 3,1 м",
        "описание": "Фундаменты под стеновое ограждение выполнены из монолитной фундаментной балки, опирающейся на отдельностоящие столбчатые монолитные железобетонные фундаменты стаканного типа сечением 1,5х1,5 м, 2,1х2,1 м, 2,1х2,4 м, 2,4х2,7 м, 3,0х3,3 м, глубиной заложения 3,1 м."
    },
    "Фундаменты под стены здания (ленточные сборные)": {
        "тип": "ленточный",
        "материал": "железобетон",
        "исполнение": "сборный",
        "основание_и_подготовка": "опирание на естественные грунты через сборные железобетонные подушки",
        "гидроизоляция_и_защита": "горизонтальная гидроизоляция по обрезу фундаментов",
        "прочее": "лента выполнена из бетонных стеновых блоков; опирание кирпичных стен через выравнивающий железобетонный пояс",
        "описание": "Фундаменты под стены здания – ленточные, сборные, железобетонные. Лента из бетонных стеновых блоков. Опирание кирпичных стен через выравнивающий железобетонный пояс. Стеновая часть из фундаментных бетонных стеновых блоков. Опирание на естественные грунты через сборные железобетонные подушки. Горизонтальная гидроизоляция по обрезу фундаментов."
    },
    "Фундаменты под колонны здания (сборные столбчатые)": {
        "тип": "столбчатый",
        "материал": "железобетон",
        "исполнение": "сборный",
        "узлы_и_закладные": "стаканного типа",
        "описание": "Фундаменты под колонны здания – сборные железобетонные, столбчатые, стаканного типа."
    },
    "Конструкции фундаментов ангара": {
        "тип": "ленточный",
        "материал": "железобетон",
        "исполнение": "монолитный",
        "основание_и_подготовка": "бетонная подготовка 100 мм",
        "узлы_и_закладные": "столики крестового сечения с поворотными опорными шарами",
        "прочее": "ширина подошвы 2,34 м, высота от верхнего обреза до подошвы 2,45 м",
        "описание": "Конструкции фундаментов ангара – монолитная железобетонная лента шириной подошвы 2,34 м (бетон B25) и высотой от верхнего обреза до подошвы 2,45 м по бетонной подготовке 100 мм. Опирание узловых элементов на фундаменты через столики крестового сечения с поворотными шарами."
    },
    "Фундаменты под стойки фахверка и портала ворот": {
        "тип": "столбчатый",
        "материал": "железобетон",
        "исполнение": "монолитный",
        "основание_и_подготовка": "бетонная подготовка и слой щебёночной подготовки",
        "прочее": "размеры подошвы 1,2х1,2 м; балки сечением 500х600 мм по бетонной подготовке 100 мм",
        "описание": "Под стойки фахверка и портала ворот выполнены монолитные столбчатые фундаменты с размерами подошвы 1,2х1,2 м (бетон B25), по бетонной подготовке и слою щебёночной подготовки. Поверх стоек расположены монолитные железобетонные балки сечением 500х600 мм по бетонной подготовке 100 мм."
    },
    "Монолитная железобетонная плита пола": {
        "тип": "плитный",
        "материал": "железобетон",
        "исполнение": "монолитный",
        "основание_и_подготовка": "многослойная подготовка: гидроизоляция (2 слоя полиэтиленовой плёнки по ГОСТ 10353-82 марки «МСО,2» h=0,4 мм), бетонная подготовка 100 мм, песчаная подготовка 500 мм по уплотнённому грунту",
        "армирование": "арматура класса А-III (А500) по ГОСТ 5781-82*",
        "гидроизоляция_и_защита": "плёнка полиэтиленовая ГОСТ 10353-82",
        "узлы_и_закладные": "короб из швеллера №40, металлические пластины 6х450 мм для затяжек полуарок 20х200 мм с шагом 3000 мм",
        "описание": "Выполнена монолитная железобетонная плита пола толщиной 300 мм с многослойной подготовкой (гидроизоляция, бетонная и песчаная подготовка). В плите выполнен короб из швеллера №40 и металлические пластины для затяжек полуарок."
    }
}


def load_construction_data_from_json(json_data: dict) -> Dict[str, Any]:
    """
    Загружает данные конструктивных решений из JSON формата.
    
    Args:
        json_data: Словарь с данными в формате {"раздел": "...", "элементы": [...]}
    
    Returns:
        Словарь с предзаполненными решениями
    """
    solutions = {}
    
    if not isinstance(json_data, dict) or "элементы" not in json_data:
        return solutions
    
    section_name = json_data.get("раздел", "Конструктивные решения")
    
    for i, element in enumerate(json_data["элементы"]):
        if not isinstance(element, dict):
            continue
            
        # Создаем уникальное название на основе типа и материала
        element_type = element.get("тип", "")
        material = element.get("материал", "")
        execution = element.get("исполнение", "")
        
        if element_type and material:
            name = f"{element_type} {material}"
            if execution:
                name += f" ({execution})"
        else:
            name = f"Элемент {i+1}"
        
        # Добавляем к названию раздел для группировки
        full_name = f"{section_name} - {name}"
        
        # Создаем описание на основе полного описания или собираем из полей
        description = element.get("описание_полное", "")
        if not description:
            # Собираем описание из отдельных полей
            parts = []
            if element_type:
                parts.append(f"Тип: {element_type}")
            if material:
                parts.append(f"Материал: {material}")
            if execution:
                parts.append(f"Исполнение: {execution}")
            if element.get("основание_и_подготовка"):
                parts.append(f"Основание и подготовка: {element['основание_и_подготовка']}")
            if element.get("армирование"):
                parts.append(f"Армирование: {element['армирование']}")
            if element.get("гидроизоляция_и_защита"):
                parts.append(f"Гидроизоляция и защита: {element['гидроизоляция_и_защита']}")
            if element.get("узлы_и_закладные"):
                parts.append(f"Узлы и закладные: {element['узлы_и_закладные']}")
            if element.get("прочее"):
                parts.append(f"Прочее: {element['прочее']}")
            
            description = ". ".join(parts)
        
        solutions[full_name] = {
            "тип": element_type,
            "материал": material,
            "исполнение": execution,
            "основание_и_подготовка": element.get("основание_и_подготовка", ""),
            "армирование": element.get("армирование", ""),
            "гидроизоляция_и_защита": element.get("гидроизоляция_и_защита", ""),
            "узлы_и_закладные": element.get("узлы_и_закладные", ""),
            "прочее": element.get("прочее", ""),
            "описание": description
        }
    
    return solutions


def merge_construction_data(existing_data: Dict[str, Any], new_data: Dict[str, Any]) -> Dict[str, Any]:
    """
    Объединяет существующие данные с новыми данными конструктивных решений.
    
    Args:
        existing_data: Существующие предзаполненные решения
        new_data: Новые данные для добавления
    
    Returns:
        Объединенный словарь
    """
    merged = existing_data.copy()
    merged.update(new_data)
    return merged


def get_construction_solutions_by_section(section_name: str) -> Dict[str, Any]:
    """
    Возвращает предзаполненные решения для указанного раздела.
    
    Args:
        section_name: Название раздела (например, "Фундаменты")
    
    Returns:
        Словарь с решениями для указанного раздела
    """
    filtered_solutions = {}
    
    for name, data in PREDEFINED_SOLUTIONS.items():
        if section_name.lower() in name.lower():
            filtered_solutions[name] = data
    
    return filtered_solutions


